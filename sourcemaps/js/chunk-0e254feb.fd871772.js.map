{"version":3,"sources":["webpack:///./src/modules/settings/ModuleSettings.vue?161e","webpack:///./src/modules/settings/handler/handlerSettings.js","webpack:///src/modules/settings/ModuleSettings.vue","webpack:///./src/modules/settings/ModuleSettings.vue?4722","webpack:///./src/modules/settings/ModuleSettings.vue","webpack:///./src/modules/settings/handler/gasPriceMixin.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","text","linkTitle","link","title","onSettings","editMode","addMode","back","close","_e","panelItems","idxToExpand","scopedSlots","_u","key","fn","staticClass","gasButtons","gasPriceType","setSelected","proxy","settingsHandler","exportStore","_v","_s","$t","tableHeaders","tableData","on","onEdit","addressBookStore","length","nativeOn","$event","itemToEdit","onMode","staticRenderFns","Settings","$store","vuexStore","validFields","Object","keys","state","global","assign","mapActions","file","Promise","resolve","reject","_this","reader","FileReader","onerror","e","Toast","message","ERROR","onloadend","evt","target","result","obj","JSON","parse","parsedObj","_validateImportObject","setImportedState","then","readAsBinaryString","body","document","time","Date","filename","getTime","newObj","el","createElement","setAttribute","encodeURIComponent","stringify","appendChild","click","removeChild","forEach","item","includes","toWei","isString","xss","name","components","SettingsImportConfig","SettingsExportConfig","SettingsGasPrice","AddressBookAddEdit","SettingsLocaleConfig","mixins","beforeRouteLeave","to","from","next","props","default","type","data","value","sortable","filterable","width","containsLink","computed","mapState","toggleTitle","watch","deep","handler","mounted","created","methods","getAddressBookTableData","number","address","nickname","resolvedAddr","callToAction","btnStyle","colorTheme","method","idx","setPriority","priority","economy","regular","fast","component","gasPriceMixin","localGas","convertedGasPrice","mapGetters","gasPrice","fromWei","gasPriceByType","gasPriceTypes","ECONOMY","REGULAR","FAST","gas","usd","formatFiatValue","BigNumber","fiatValue","times","estimatedTime","web3","fetchGasPrice","selected","setGasPriceType","online","isOfflineApp","updateGasPrice"],"mappings":"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","file":"js/chunk-0e254feb.fd871772.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mew-overlay',{attrs:{\"footer\":{\n    text: 'Need help?',\n    linkTitle: 'Contact support',\n    link: 'mailto:support@myetherwallet.com'\n  },\"title\":_vm.title,\"show-overlay\":_vm.onSettings,\"back\":_vm.editMode || _vm.addMode ? _vm.back : null,\"content-size\":\"xlarge\",\"close\":_vm.close}},[(!_vm.editMode && !_vm.addMode)?_c('mew-expand-panel',{attrs:{\"panel-items\":_vm.panelItems,\"idx-to-expand\":_vm.idxToExpand},scopedSlots:_vm._u([{key:\"panelBody1\",fn:function(){return [_c('div',{staticClass:\"px-5\"},[_c('settings-gas-price',{attrs:{\"buttons\":_vm.gasButtons,\"selected\":_vm.gasPriceType,\"set-selected\":_vm.setSelected,\"global\":true,\"from-settings\":true}})],1)]},proxy:true},{key:\"panelBody2\",fn:function(){return [_c('settings-import-config',{attrs:{\"import-config\":_vm.settingsHandler}})]},proxy:true},{key:\"panelBody3\",fn:function(){return [_c('settings-export-config',{attrs:{\"export-config\":_vm.exportStore}})]},proxy:true},{key:\"panelBody4\",fn:function(){return [_c('div',{staticClass:\"pa-6\"},[_c('div',{staticClass:\"mb-4\"},[_vm._v(\" \"+_vm._s(_vm.$t('interface.address-book.add-up-to'))+\" \")]),_c('mew-table',{attrs:{\"table-headers\":_vm.tableHeaders,\"table-data\":_vm.tableData,\"has-color\":\"\",\"success-toast\":_vm.$t('common.copied')},on:{\"onClick\":_vm.onEdit}}),_c('div',{staticClass:\"d-flex justify-center mt-5\"},[_c('mew-button',{attrs:{\"disabled\":_vm.addressBookStore.length >= 10,\"title\":\"+ Add\",\"btn-size\":\"xlarge\"},nativeOn:{\"click\":function($event){_vm.addMode = !_vm.addMode}}})],1)],1)]},proxy:true},{key:\"panelBody5\",fn:function(){return [_c('settings-locale-config')]},proxy:true}],null,false,4000153694)}):_vm._e(),(_vm.addMode || _vm.editMode)?_c('address-book-add-edit',{attrs:{\"item\":_vm.itemToEdit,\"mode\":_vm.onMode},on:{\"back\":_vm.back}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import vuexStore from '@/core/store';\nimport { mapActions } from 'vuex';\nimport { toWei } from 'web3-utils';\nimport { includes, isString, keys } from 'lodash';\nimport xss from 'xss';\nimport { Toast, ERROR } from '@/modules/toast/handler/handlerToast';\n\nexport default class Settings {\n  constructor() {\n    this.$store = vuexStore;\n    this.validFields = Object.keys(this.$store.state.global);\n    Object.assign(this, mapActions('global', ['setImportedState']));\n  }\n\n  // Receives object from file read in module\n  // Returns a promise so the module can react accordingly\n  importStore(file) {\n    return new Promise((resolve, reject) => {\n      const _this = this;\n      try {\n        const reader = new FileReader();\n        reader.onerror = e => {\n          Toast(e.message, {}, ERROR);\n        };\n        reader.onloadend = evt => {\n          const file = evt.target.result;\n          try {\n            const obj = JSON.parse(file);\n            const parsedObj = _this._validateImportObject(obj);\n            // sets the imported state to the store\n            _this.setImportedState(parsedObj).then(() => {\n              resolve();\n            });\n          } catch ({ message }) {\n            Toast('Invalid JSON: ' + message, {}, ERROR);\n          }\n        };\n        reader.readAsBinaryString(file);\n      } catch (e) {\n        reject(e.message);\n      }\n    });\n  }\n\n  exportStore() {\n    const body = document.body;\n    const time = new Date();\n    const filename = `Store-Export-${time.getTime()}.json`;\n    const newObj = Object.assign({}, this.$store.state.global);\n    const el = document.createElement('a');\n    el.setAttribute(\n      'href',\n      `data:text/plain;charset=utf-8,${encodeURIComponent(\n        JSON.stringify(newObj)\n      )}`\n    );\n    el.setAttribute('download', filename);\n    body.appendChild(el);\n    el.click();\n    body.removeChild(el);\n  }\n\n  // Validates the passed object for import\n  // strips strings and only accepts certain keys\n  _validateImportObject(obj) {\n    const newObj = {};\n    keys(obj).forEach(item => {\n      if (includes(this.validFields, item)) {\n        if (item === 'gasPrice') {\n          // converts gasPrice back to BN instance\n          // this is assuming that when exporting, it gets converted to string\n          newObj[item] = toWei(item);\n        } else {\n          // strip tags for string, otherwise return item\n          newObj[item] = isString(obj[item]) ? xss(obj[item]) : obj[item];\n        }\n      }\n    });\n    return newObj;\n  }\n}\n","<template>\n  <mew-overlay\n    :footer=\"{\n      text: 'Need help?',\n      linkTitle: 'Contact support',\n      link: 'mailto:support@myetherwallet.com'\n    }\"\n    :title=\"title\"\n    :show-overlay=\"onSettings\"\n    :back=\"editMode || addMode ? back : null\"\n    content-size=\"xlarge\"\n    :close=\"close\"\n  >\n    <mew-expand-panel\n      v-if=\"!editMode && !addMode\"\n      :panel-items=\"panelItems\"\n      :idx-to-expand=\"idxToExpand\"\n    >\n      <template #panelBody1>\n        <div class=\"px-5\">\n          <settings-gas-price\n            :buttons=\"gasButtons\"\n            :selected=\"gasPriceType\"\n            :set-selected=\"setSelected\"\n            :global=\"true\"\n            :from-settings=\"true\"\n          />\n        </div>\n      </template>\n      <template #panelBody2>\n        <settings-import-config :import-config=\"settingsHandler\" />\n      </template>\n      <template #panelBody3>\n        <settings-export-config :export-config=\"exportStore\" />\n      </template>\n      <template #panelBody4>\n        <div class=\"pa-6\">\n          <div class=\"mb-4\">\n            {{ $t('interface.address-book.add-up-to') }}\n          </div>\n          <mew-table\n            :table-headers=\"tableHeaders\"\n            :table-data=\"tableData\"\n            has-color\n            :success-toast=\"$t('common.copied')\"\n            @onClick=\"onEdit\"\n          />\n\n          <div class=\"d-flex justify-center mt-5\">\n            <mew-button\n              :disabled=\"addressBookStore.length >= 10\"\n              title=\"+ Add\"\n              btn-size=\"xlarge\"\n              @click.native=\"addMode = !addMode\"\n            />\n          </div>\n        </div>\n      </template>\n      <template #panelBody5>\n        <settings-locale-config />\n      </template>\n      <!-- <template #panelBody5>\n        <notifications />\n      </template> -->\n    </mew-expand-panel>\n    <!--\n  =====================================================================================\n    Add / Edit Address Book overlay\n  =====================================================================================\n  -->\n    <address-book-add-edit\n      v-if=\"addMode || editMode\"\n      :item=\"itemToEdit\"\n      :mode=\"onMode\"\n      @back=\"back\"\n    />\n  </mew-overlay>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nimport { ROUTES_HOME, ROUTES_WALLET } from '@/core/configs/configRoutes';\n\nimport handlerSettings from './handler/handlerSettings';\nimport gasPriceMixin from './handler/gasPriceMixin';\nconst modes = ['add', 'edit'];\n\nexport default {\n  name: 'ModuleSettings',\n  components: {\n    SettingsImportConfig: () => import('./components/SettingsImportConfig'),\n    SettingsExportConfig: () => import('./components/SettingsExportConfig'),\n    SettingsGasPrice: () => import('./components/SettingsGasPrice'),\n    AddressBookAddEdit: () =>\n      import('@/modules/address-book/components/AddressBookAddEdit'),\n    SettingsLocaleConfig: () => import('./components/SettingsLocaleConfig.vue')\n  },\n  mixins: [gasPriceMixin],\n  beforeRouteLeave(to, from, next) {\n    if (to.name == ROUTES_HOME.ACCESS_WALLET.NAME) {\n      next({ name: ROUTES_WALLET.DASHBOARD.NAME });\n    } else {\n      next();\n    }\n  },\n  props: {\n    onSettings: { default: false, type: Boolean }\n  },\n  data() {\n    return {\n      settingsHandler: null,\n      idxToExpand: null,\n      editMode: false,\n      addMode: false,\n      itemToEdit: {},\n      tableHeaders: [\n        {\n          text: '#',\n          value: 'number',\n          sortable: false,\n          filterable: false,\n          width: '5%'\n        },\n        {\n          text: 'Address',\n          value: 'address',\n          sortable: false,\n          filterable: false,\n          width: '50%'\n        },\n        {\n          text: 'Nickname',\n          value: 'nickname',\n          sortable: false,\n          filterable: false,\n          containsLink: true,\n          width: '20%'\n        },\n        {\n          text: '',\n          value: 'callToAction',\n          sortable: false,\n          filterable: false,\n          width: '20%'\n        }\n      ],\n      tableData: []\n    };\n  },\n  computed: {\n    ...mapState('addressBook', ['addressBookStore']),\n    panelItems() {\n      return [\n        {\n          name: 'Default transaction priority',\n          toggleTitle: this.setPriority(this.gasPriceType)\n        },\n        {\n          name: 'Import configurations'\n        },\n        {\n          name: 'Export configurations'\n        },\n        {\n          name: 'Contact addresses'\n        },\n        {\n          name: 'Currency settings'\n        }\n      ];\n    },\n    onMode() {\n      return this.addMode ? modes[0] : modes[1];\n    },\n    title() {\n      if (this.addMode) {\n        return this.$t('interface.address-book.add-addr');\n      }\n      if (this.editMode) {\n        return this.$t('interface.address-book.edit');\n      }\n      return this.$t('common.settings');\n    }\n  },\n  watch: {\n    addressBookStore: {\n      deep: true,\n      handler: function () {\n        this.getAddressBookTableData();\n      }\n    }\n  },\n  mounted() {\n    this.getAddressBookTableData();\n  },\n  created() {\n    this.settingsHandler = new handlerSettings();\n  },\n  methods: {\n    getAddressBookTableData() {\n      this.tableData = [];\n      this.addressBookStore.forEach((item, idx) => {\n        this.tableData.push({\n          number: idx + 1,\n          address: item.address,\n          nickname: item.nickname,\n          resolvedAddr: item.address.includes('.') ? item.resolvedAddr : null,\n          callToAction: [\n            {\n              title: 'Edit',\n              btnStyle: 'transparent',\n              colorTheme: 'greenPrimary',\n              method: this.onEdit\n            }\n          ]\n        });\n      });\n    },\n    back(idx) {\n      if (!isNaN(idx)) {\n        this.idxToExpand = idx ? idx : null;\n      }\n      if (idx instanceof PointerEvent) {\n        this.idxToExpand = [3];\n      }\n      this.addMode = false;\n      this.editMode = false;\n    },\n    onEdit(item) {\n      this.editMode = !this.editMode;\n      this.itemToEdit = item;\n    },\n    close() {\n      this.$emit('closeSettings');\n      this.idxToExpand = null;\n      this.addMode = false;\n      this.editMode = false;\n    },\n    exportStore() {\n      this.settingsHandler.exportStore();\n    },\n    setPriority(priority) {\n      const priorities = {\n        economy: 'Normal',\n        regular: 'Higher',\n        fast: 'Highest'\n      };\n      return priorities[priority];\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSettings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSettings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleSettings.vue?vue&type=template&id=ba8a6410&\"\nimport script from \"./ModuleSettings.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleSettings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import BigNumber from 'bignumber.js';\nimport { mapGetters, mapState, mapActions } from 'vuex';\nimport { gasPriceTypes, estimatedTime } from '@/core/helpers/gasPriceHelper';\nimport { fromWei, toWei } from 'web3-utils';\nimport { formatFiatValue } from '@/core/helpers/numberFormatHelper';\n\nconst gasPriceMixin = {\n  data() {\n    return {\n      localGas: null,\n      convertedGasPrice: '0'\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['web3', 'isOfflineApp']),\n    ...mapGetters('global', ['gasPrice', 'network', 'gasPriceByType']),\n    ...mapGetters('external', ['fiatValue']),\n    ...mapState('global', ['gasPriceType', 'baseGasPrice', 'online']),\n    gasButtons() {\n      if (!this.gasPrice) return [];\n      const economy = fromWei(this.gasPriceByType(gasPriceTypes.ECONOMY));\n      const regular = fromWei(this.gasPriceByType(gasPriceTypes.REGULAR));\n      const fast = fromWei(this.gasPriceByType(gasPriceTypes.FAST));\n      return [\n        {\n          title: gasPriceTypes.ECONOMY,\n          gas: `${economy}`,\n          usd: `$ ${\n            formatFiatValue(\n              BigNumber(this.fiatValue).times(fromWei(toWei(economy)))\n            ).value\n          }`,\n          time: estimatedTime(gasPriceTypes.ECONOMY),\n          priority: 'Normal priority'\n        },\n        {\n          title: gasPriceTypes.REGULAR,\n          gas: `${regular}`,\n          usd: `$ ${\n            formatFiatValue(\n              BigNumber(this.fiatValue).times(fromWei(toWei(regular)))\n            ).value\n          }`,\n          time: estimatedTime(gasPriceTypes.REGULAR),\n          priority: 'Higher priority'\n        },\n        {\n          title: gasPriceTypes.FAST,\n          gas: `${fast}`,\n          usd: `$ ${\n            formatFiatValue(\n              BigNumber(this.fiatValue).times(fromWei(toWei(fast)))\n            ).value\n          }`,\n          time: estimatedTime(gasPriceTypes.FAST),\n          priority: 'Highest priority'\n        }\n      ];\n    }\n  },\n  watch: {\n    web3() {\n      this.fetchGasPrice();\n    }\n  },\n  mounted() {\n    this.fetchGasPrice();\n  },\n  methods: {\n    ...mapActions('global', ['setGasPriceType', 'updateGasPrice']),\n    setSelected(selected) {\n      this.setGasPriceType(selected);\n    },\n    fetchGasPrice() {\n      if (this.online && !this.isOfflineApp) this.updateGasPrice();\n    }\n  }\n};\n\nexport default gasPriceMixin;\n"],"sourceRoot":""}