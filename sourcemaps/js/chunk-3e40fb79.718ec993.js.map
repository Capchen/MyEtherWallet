{"version":3,"sources":["webpack:///./src/assets/images/currencies/USD.svg","webpack:///./src/modules/moon-pay/ModuleMoonPay.vue?503e","webpack:///./src/modules/moon-pay/handlers/handlerOrder.js","webpack:///src/modules/moon-pay/ModuleMoonPay.vue","webpack:///./src/modules/moon-pay/ModuleMoonPay.vue?dc59","webpack:///./src/modules/moon-pay/ModuleMoonPay.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","open","leftBtn","step","tabItems","activeTab","on","onTab","scopedSlots","_u","key","fn","orderHandler","close","defaultCurrency","inWallet","supportedBuy","setSelectedCurrency","openProviders","setSelectedFiat","hideMoonpay","setSimplexQuote","setToAddress","buySuccess","proxy","_e","onlySimplex","selectedCurrency","selectedFiat","buyObj","simplexQuote","toAddress","$event","reset","staticRenderFns","API","OrderHandler","tokenSymbol","fiatCurrency","amount","address","hash","sha3","id","substring","Promise","resolve","link","parsedUrl","encodeURI","window","symbol","axios","get","headers","then","res","data","reject","catch","name","components","BuyEthComponent","SellEthComponent","MoonPayBuyProviderComponent","props","type","default","isOpen","nodes","computed","mapState","mapGetters","token","decimals","img","subtext","value","network","contract","method","watch","newVal","methods","mapActions","val","Toast","setTokens","tokens","tokenMap","e","setBuyObj","items","component"],"mappings":"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","file":"js/chunk-3e40fb79.718ec993.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/USD.36ab476e.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mew-component--moon-pay\"},[_c('mew-popup',{attrs:{\"show\":_vm.open,\"has-buttons\":false,\"has-title\":false,\"has-padding\":false,\"max-width\":\"540\",\"left-btn\":_vm.leftBtn,\"scrollable\":\"\",\"has-body-content\":\"\"}},[(_vm.step === 0)?_c('div',[(_vm.open)?_c('mew-tabs',{staticClass:\"pt-3\",attrs:{\"items\":_vm.tabItems,\"active-tab\":_vm.activeTab,\"active-color\":\"greenPrimary\",\"has-underline\":\"\"},on:{\"onTab\":_vm.onTab},scopedSlots:_vm._u([{key:\"tabContent1\",fn:function(){return [_c('buy-eth-component',{attrs:{\"order-handler\":_vm.orderHandler,\"close\":_vm.close,\"tab\":_vm.activeTab,\"default-currency\":_vm.defaultCurrency,\"in-wallet\":_vm.inWallet,\"supported-buy\":_vm.supportedBuy},on:{\"selectedCurrency\":_vm.setSelectedCurrency,\"openProviders\":_vm.openProviders,\"selectedFiat\":_vm.setSelectedFiat,\"hideMoonpay\":_vm.hideMoonpay,\"simplexQuote\":_vm.setSimplexQuote,\"toAddress\":_vm.setToAddress,\"success\":_vm.buySuccess}})]},proxy:true},{key:\"tabContent2\",fn:function(){return [_c('sell-eth-component',{attrs:{\"order-handler\":_vm.orderHandler,\"close\":_vm.close,\"tab\":_vm.activeTab,\"in-wallet\":_vm.inWallet,\"default-currency\":_vm.defaultCurrency},on:{\"selectedCurrency\":_vm.setSelectedCurrency}})]},proxy:true}],null,false,413955045)}):_vm._e()],1):_vm._e(),(_vm.step === 1)?_c('MoonPayBuyProviderComponent',{attrs:{\"order-handler\":_vm.orderHandler,\"close\":_vm.close,\"in-wallet\":_vm.inWallet,\"only-simplex\":_vm.onlySimplex,\"selected-currency\":_vm.selectedCurrency,\"selected-fiat\":_vm.selectedFiat,\"buy-obj\":_vm.buyObj,\"simplex-quote\":_vm.simplexQuote,\"to-address\":_vm.toAddress},on:{\"close\":function($event){_vm.step = 0},\"openProviders\":_vm.openProviders,\"reset\":_vm.reset}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { sha3 } from 'web3-utils';\nimport axios from 'axios';\nconst API = 'https://mainnet.mewwallet.dev';\n\nexport default class OrderHandler {\n  constructor() {}\n  /*\n   ** MoonPay\n   */\n  buy(tokenSymbol, fiatCurrency, amount, address) {\n    const hash = sha3(address);\n    const id = `WEB|${hash.substring(0, 42)}`;\n    return new Promise(resolve => {\n      let link = `${API}/v3/purchase/moonpay/order?address=${address}&id=${id}&cryptoCurrency=${tokenSymbol}&fiatCurrency=${fiatCurrency}`;\n      if (amount) {\n        link += `&requestedAmount=${amount}`;\n      }\n      const parsedUrl = encodeURI(link);\n      // eslint-disable-next-line\n      window.open(parsedUrl, '_blank');\n      resolve();\n    });\n  }\n\n  sell(tokenSymbol, amount, address) {\n    const hash = sha3(address);\n    const id = `WEB|${hash.substring(0, 42)}`;\n    return new Promise(resolve => {\n      const parsedUrl = encodeURI(\n        `${API}/v3/sell/moonpay/order?address=${address}&id=${id}&cryptoCurrency=${tokenSymbol}&requestedAmount=${amount}`\n      );\n      // eslint-disable-next-line\n      window.open(parsedUrl, '_blank');\n      resolve();\n    });\n  }\n\n  /**\n   *\n   * @param {String} symbol - Crypto Symbol ex. ETH\n   * @returns\n   */\n  getSupportedFiatToBuy(symbol) {\n    return axios\n      .get(`${API}/v3/purchase/providers/web?iso=us&cryptoCurrency=${symbol}`, {\n        headers: {\n          'Accept-Language': 'en-US'\n        }\n      })\n      .then(res => res.data);\n  }\n\n  getFiatRatesForBuy() {\n    return axios\n      .get(`${API}/v3/purchase/moonpay/quotes`, {\n        headers: {\n          'Accept-Language': 'en-US'\n        }\n      })\n      .then(res => res.data);\n  }\n\n  getSupportedFiatToSell(symbol) {\n    return axios\n      .get(`${API}/v3/sell/providers/web?iso=us&cryptoCurrency=${symbol}`, {\n        headers: {\n          'Accept-Language': 'en-US'\n        }\n      })\n      .then(res => res.data);\n  }\n\n  /*\n   ** Simplex\n   */\n  simplexBuy(tokenSymbol, fiatCurrency, amount, address) {\n    const hash = sha3(address);\n    const id = `WEB|${hash.substring(0, 42)}`;\n    return new Promise(resolve => {\n      const parsedUrl = encodeURI(\n        `${API}/v2/purchase/simplex/order?address=${address}&id=${id}&requestedCurrency=${fiatCurrency}&fiatCurrency=${fiatCurrency}&requestedAmount=${amount}&cryptoCurrency=${tokenSymbol}`\n      );\n      // eslint-disable-next-line\n      window.open(parsedUrl, '_blank');\n      resolve();\n    });\n  }\n\n  getSimplexQuote(tokenSymbol, fiatCurrency, amount, address) {\n    const hash = sha3(address);\n    const id = `WEB|${hash.substring(0, 42)}`;\n    return new Promise((resolve, reject) => {\n      axios\n        .get(\n          encodeURI(\n            `${API}/purchase/simplex/quote?id=${id}&requestedCurrency=${fiatCurrency}&fiatCurrency=${fiatCurrency}&requestedAmount=${amount}&cryptoCurrency=${tokenSymbol}`\n          ),\n          {\n            headers: {\n              'Accept-Language': 'en-US'\n            }\n          }\n        )\n        .then(res => {\n          resolve(res.data);\n        })\n        .catch(reject);\n    });\n  }\n\n  // this won't be used for awhile but is setup here\n  getHistory() {}\n}\n","<template>\n  <div class=\"mew-component--moon-pay\">\n    <mew-popup\n      :show=\"open\"\n      :has-buttons=\"false\"\n      :has-title=\"false\"\n      :has-padding=\"false\"\n      max-width=\"540\"\n      :left-btn=\"leftBtn\"\n      scrollable\n      has-body-content\n    >\n      <div v-if=\"step === 0\">\n        <mew-tabs\n          v-if=\"open\"\n          :items=\"tabItems\"\n          :active-tab=\"activeTab\"\n          active-color=\"greenPrimary\"\n          has-underline\n          class=\"pt-3\"\n          @onTab=\"onTab\"\n        >\n          <template #tabContent1>\n            <buy-eth-component\n              :order-handler=\"orderHandler\"\n              :close=\"close\"\n              :tab=\"activeTab\"\n              :default-currency=\"defaultCurrency\"\n              :in-wallet=\"inWallet\"\n              :supported-buy=\"supportedBuy\"\n              @selectedCurrency=\"setSelectedCurrency\"\n              @openProviders=\"openProviders\"\n              @selectedFiat=\"setSelectedFiat\"\n              @hideMoonpay=\"hideMoonpay\"\n              @simplexQuote=\"setSimplexQuote\"\n              @toAddress=\"setToAddress\"\n              @success=\"buySuccess\"\n            />\n          </template>\n          <template #tabContent2>\n            <sell-eth-component\n              :order-handler=\"orderHandler\"\n              :close=\"close\"\n              :tab=\"activeTab\"\n              :in-wallet=\"inWallet\"\n              :default-currency=\"defaultCurrency\"\n              @selectedCurrency=\"setSelectedCurrency\"\n            />\n          </template>\n        </mew-tabs>\n      </div>\n      <MoonPayBuyProviderComponent\n        v-if=\"step === 1\"\n        :order-handler=\"orderHandler\"\n        :close=\"close\"\n        :in-wallet=\"inWallet\"\n        :only-simplex=\"onlySimplex\"\n        :selected-currency=\"selectedCurrency\"\n        :selected-fiat=\"selectedFiat\"\n        :buy-obj=\"buyObj\"\n        :simplex-quote=\"simplexQuote\"\n        :to-address=\"toAddress\"\n        @close=\"step = 0\"\n        @openProviders=\"openProviders\"\n        @reset=\"reset\"\n      />\n    </mew-popup>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapActions } from 'vuex';\nimport { isEmpty } from 'lodash';\n\nimport WALLET_TYPES from '@/modules/access-wallet/common/walletTypes';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport nodes from '@/utils/networks';\nimport { SUCCESS, Toast } from '../toast/handler/handlerToast';\n\nimport handler from './handlers/handlerOrder';\n\nexport default {\n  name: 'MoonPay',\n  components: {\n    BuyEthComponent: () => import('./components/MoonPayBuyComponent'),\n    SellEthComponent: () => import('./components/MoonPaySellComponent'),\n    MoonPayBuyProviderComponent: () =>\n      import('./components/MoonPayBuyProviderComponent.vue')\n  },\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isOpen: false,\n      activeTab: 0,\n      orderHandler: {},\n      selectedCurrency: {},\n      selectedFiat: {},\n      nodes: nodes,\n      onlySimplex: false,\n      buyObj: {},\n      step: 0,\n      simplexQuote: {},\n      toAddress: ''\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'instance']),\n    ...mapGetters('wallet', ['tokensList']),\n    ...mapGetters('global', ['network']),\n    ...mapGetters('external', ['contractToToken']),\n    inWallet() {\n      return (\n        this.$route.fullPath.includes('/wallet') && !this.$route.meta.noAuth\n      );\n    },\n    defaultCurrency() {\n      if (isEmpty(this.selectedCurrency) && this.supportedBuy) {\n        if (this.inWallet) return this.tokensList[0];\n        const token = this.contractToToken(MAIN_TOKEN_ADDRESS);\n        token.value = token.symbol;\n        return token;\n      } else if (isEmpty(this.selectedCurrency) || !this.supportedBuy) {\n        return {\n          decimals: 18,\n          img: 'https://img.mewapi.io/?image=https://raw.githubusercontent.com/MyEtherWallet/ethereum-lists/master/src/icons/ETH-0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee.svg',\n          name: 'ETH',\n          subtext: 'Ethereum',\n          value: 'ETH',\n          symbol: 'ETH',\n          network: 'ETH',\n          contract: MAIN_TOKEN_ADDRESS\n        };\n      }\n      return this.selectedCurrency;\n    },\n    supportedBuy() {\n      return (\n        this.network.type.name === 'ETH' ||\n        this.network.type.name === 'BSC' ||\n        this.network.type.name === 'MATIC'\n      );\n    },\n    leftBtn() {\n      return {\n        method: this.close\n      };\n    },\n    tabItems() {\n      return [\n        {\n          name: `Buy`\n        },\n        {\n          name: `Sell`\n        }\n      ];\n    }\n  },\n  watch: {\n    open(newVal) {\n      this.isOpen = newVal;\n      if (newVal) {\n        this.orderHandler = new handler();\n      }\n      this.selectedCurrency = {};\n      this.selectedCurrency = this.defaultCurrency;\n    },\n    address() {\n      this.selectedCurrency = this.defaultCurrency;\n    },\n    network() {\n      this.selectedCurrency = {};\n      this.selectedCurrency = this.defaultCurrency;\n      this.setTokens();\n    }\n  },\n  methods: {\n    ...mapActions('wallet', ['setWeb3Instance']),\n    ...mapActions('global', ['setNetwork']),\n    ...mapActions('external', ['setNetworkTokens']),\n    onTab(val) {\n      this.selectedCurrency = this.defaultCurrency;\n      if (val === 1 || (val === 0 && (!this.supportedBuy || !this.inWallet))) {\n        if (this.network.type.chainID !== 1) {\n          const defaultNetwork = this.nodes['ETH'].find(item => {\n            return item.service === 'myetherwallet.com-ws';\n          });\n          if (\n            !this.instance ||\n            (this.instance &&\n              this.instance.identifier !== WALLET_TYPES.WEB3_WALLET)\n          ) {\n            this.setNetwork({ network: defaultNetwork }).then(() => {\n              this.setWeb3Instance();\n              this.activeTab = val;\n              Toast(`Switched network to: ETH`, {}, SUCCESS);\n            });\n          }\n        }\n      } else {\n        this.activeTab = val;\n      }\n    },\n    setTokens() {\n      if (!this.inWallet) {\n        const tokenMap = new Map();\n        this.network.type.tokens.then(tokens => {\n          tokens.forEach(token => {\n            tokenMap.set(token.address.toLowerCase(), token);\n          });\n          this.setNetworkTokens(tokenMap);\n        });\n      }\n    },\n    close() {\n      this.activeTab = 0;\n      this.step = 0;\n      this.onlySimplex = false;\n      this.$emit('close', false);\n    },\n    setSelectedCurrency(e) {\n      this.selectedCurrency = e;\n    },\n    setSelectedFiat(e) {\n      this.selectedFiat = e;\n    },\n    openProviders(val) {\n      this.step = val;\n    },\n    setBuyObj(val) {\n      this.buyObj = val;\n    },\n    setSimplexQuote(val) {\n      this.simplexQuote = val;\n    },\n    setToAddress(val) {\n      this.toAddress = val;\n    },\n    reset() {\n      this.selectedCurrency = this.defaultCurrency;\n      this.selectedFiat = {\n        name: 'USD',\n        value: 'USD',\n        // eslint-disable-next-line\n        img: require(`@/assets/images/currencies/USD.svg`)\n      };\n      this.onlySimplex = false;\n    },\n    hideMoonpay(val) {\n      this.onlySimplex = val;\n    },\n    buySuccess(items) {\n      this.setSimplexQuote(items[0]);\n      this.setToAddress(items[1]);\n      this.setBuyObj(items[2]);\n      this.openProviders(items[3]);\n      this.setSelectedCurrency(items[4]);\n      this.setSelectedFiat(items[5]);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleMoonPay.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleMoonPay.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleMoonPay.vue?vue&type=template&id=f7d46270&scoped=true&\"\nimport script from \"./ModuleMoonPay.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleMoonPay.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f7d46270\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}