{"version":3,"sources":["webpack:///./src/modules/buy-sell/components/BuyComponent.vue?1fb5","webpack:///./src/modules/buy-sell/components/BuyComponent.vue?479d","webpack:///./src/modules/buy-sell/components/BuyComponent.vue?f553","webpack:///src/modules/buy-sell/components/BuyComponent.vue","webpack:///./src/modules/buy-sell/components/BuyComponent.vue?735f","webpack:///./src/modules/buy-sell/components/BuyComponent.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","amountErrorMessages","nativeOn","$event","preventCharE","model","value","callback","$$v","amount","expression","staticStyle","fiatCurrencyItems","selectedFiat","scopedSlots","_u","key","fn","_s","includesFeeText","networkFeeText","dailyLimit","monthlyLimit","proxy","loading","cryptoToFiat","selectedCryptoName","plusFeeF","on","openTokenSelect","selectedCurrency","img","name","inWallet","_e","ref","setAddress","disableBuy","buyBtnTitle","isValidToAddress","buy","apply","arguments","currencyItems","setCurrency","staticRenderFns","components","ModuleAddressBook","BuySellTokenSelect","props","orderHandler","type","default","defaultCurrency","supportedBuy","data","fetchedData","currencyRates","toAddress","validToAddress","gasPrice","web3Connections","simplexQuote","showMoonpay","disableCurrencySelect","localCryptoAmount","computed","mapGetters","mapState","formatFiatValue","currencyConfig","rate","currency","fiatMultiplier","BigNumber","toBN","selectedFiatName","actualAddress","actualValidAddress","networkFee","priceOb","crypto_currency","fiat_currency","price","networkFeeToFiat","minFee","plusFee","percentFee","isEUR","tokens","arr","buyContracts","token","actualPrice","hasData","moonpayCryptoAmount","simplexCryptoAmount","max","moonpay","simplex","maxVal","min","hideSimplex","watch","handler","ETH","BNB","MATIC","deep","multipliedBy","toFixed","network","simplexMax","isEmpty","isNaN","div","toString","coinGeckoTokens","mounted","methods","fetchGasPrice","supportedNodes","nodeType","node","web3","isLT","checkMoonPayMax","fetchCurrencyData","getSupportedFiatToBuy","then","catch","Toast","getSimplexQuote","compareQuotes","fiatAmount","buyObj","component"],"mappings":"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CAF,YACAC,sBAEAnB,UACAkB,aACAC,YAEAE,cACAH,aACAC,aAGAG,gBACA,OACA1B,mBACAC,sCACAN,WACAX,cACAmB,WACA1B,YAEAyB,eAEAyB,eACAC,iBACAhD,aACAiD,aACAC,kBACAC,aACAC,mBACAC,gBACAC,eACAC,yBACAC,wBAGAC,sGACAC,qDACAC,6CACAA,+DACAD,gDACAA,6CACAhD,2BACA,0DACAkD,gEAGAjD,0BACA,gBACA,qFAEAiD,kEAGAhD,sBACA,uBACA,mBACA,sCACA,6BACAgD,yDAGA/C,wBACA,0CACA,+BACA+C,yDAGAC,0BACA,8BACA,uBACA,IACA,OAAAC,OAAAC,aAEAC,0BAAA,WACA,iBACA,iDACA,2DAEA,SACAC,qBACAC,qBAEA,6BAEAC,4BACA,+BAEAC,yBACA,kDAEAC,8BACA,4CAEAC,sBACA,wEAEAC,mBAAA,WACA,8CAIA,CAAAC,sBAAAC,oBAAAC,oBAHA,iCACA,4DAIAC,4BACA,kEAEAC,kBACA,wDAEAC,mBACA,iBACAZ,yCACAA,2CACA,oBACAA,0BACAA,6CACA,kDAEA/C,oBACA,+DAEA4D,sBACA,kCAEA7D,8BAAA,MACA,+FAEA8D,iBACA,oEAEAnD,sBACA,OACA,yCACA,cACA,gCACA,mBAGAC,uBACA,iBAEArC,+BACA,wDACA,kBAEA,uBACA,2BAEA,yBACA,oDACAoE,yEACA,uBAEA,4BACA,oDACAA,4EACA,uBAEA,IAEAoB,kBAAA,WACA,iBACA,oCACA,qCACA,0DAEA,KAEA,OADAC,UACA,EAEA,2BAEA,OADA,aACA,IACA,IAEA,IACA,EADA,6BACAC,QAAA,8CACA,0BACA,cACA,8BACA,UAEAhD,yBAAA,WACA,sBACA,MACA,4BACA,6BACA,wCACA,uCAEA,yDACA,+CAQA,OANAiD,uBACAC,cACA,kBACA,MACAD,eACAA,gBACA,KAEA,YACA,oBACA,WAEAE,mBACA,+CAEArE,wBACA,wBACA,yBACA,0BAEAsE,+BACA,sBACArB,sDACA,OAEAsB,+BACA,8DAEApF,6BACA,mBACA,2EACA,QACA,0BAEAqF,eAAA,WACA,yBACA,mEACA,2DAEA,mEACA,2DAEA,OACAC,UACAxB,iBACAA,UACAyB,UACAzB,iBACAA,WAGA,OACAwB,kBACAC,oBAGAC,kBACA,uBACA,mBACA,sCACA,eAEAC,eAAA,WACA,iBACA,uCACA,2DAEA,kCAEA,gBAEAC,uBACA,MACA,sEAIAC,OACAzE,kBACA0E,sBAAA,MACA,GACAC,UACAC,UACAC,eAGA,KACA,0FACA,cAKA,2BACA,yBAEA,sDANA,yBAQAC,SAEA/F,cACA2F,sBAAA,WACA,+BACA,+BACA,oDAEA,uCACA,wCACAK,gBACAC,WACA,0DACA,+BAGAF,SAEAG,SACAP,mBACA,yBACA,4CAEAI,SAEA1D,cACAsD,mBACA,0BAEAI,SAEAnG,QACA+F,oBACA,yDACA,uBAEAQ,SACAC,yBACA,gBACAC,SAEA,iBAEA,gBACA,uBACA,wCACAC,wBACAC,cAIAzD,gBACA6C,oBACA,IACA,uCACA,0BAGAa,iBACAb,mBACA,2BAGA3E,2BACA,qDAGAyF,mBAAA,MACA,6FACA,0BAEAC,SACAnF,2BACA,2CAEA,iBADA,uBAEA,uBAEAoF,yBAAA,kKAaA,OAZAC,GACAhB,UACAC,UACAC,eAEAe,+DAEAD,6BADA,MAEAE,YACA,uBACAC,oBACA,wBACA,SACA,0GAdA,IAgBAC,mBACA,qBAEAtF,6BACA,qDAEAuF,2BACA,uBACA,2BACA,6BAEAlF,wBACA,yBAEAmF,6BAAA,aACA,gBACA,8BACA,kBACA,qBACA,kBACAC,oFACAC,kBACA,sDACA,0CACA,aACA,8BAEA,kCACA,kCACAd,qBACAC,cAEAc,mBACAC,+BAEA,wBAEAC,2BAAA,WAEA,mBACA,yBACAnB,mCACA,0BACAC,oBACA,kCACA,gCAGA,gBACA,8BACA,qBACA,kBACAkB,gBACA,wBACA,sBACA,YACA,oBAEAH,kBACA,mCACA,aACA,2BACA,uCACA,qBAEAC,mBACAC,iCAGAE,yBACA,uBAEA,4CAEA,qEAEA7F,eACA,OACAf,sCACAC,2CACAC,uBACAR,qCACAC,mCACAC,2BACAC,+BACAgH,wBAEA,uBACA,sBACA,kBACA,eACAC,EACA,EACA,sBACA,qBAGAnI,yBACA,mCCxnBoX,I,kCCShXoI,EAAY,eACd,EACAjJ,EACAsD,GACA,EACA,KACA,WACA,MAIa,aAAA2F,E","file":"js/chunk-5d7e1b16.8f59f099.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BuyComponent.vue?vue&type=style&index=1&id=22bb49e2&prod&lang=scss&\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BuyComponent.vue?vue&type=style&index=0&id=22bb49e2&prod&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"py-8 px-8 moonpay-buy-component\"},[_c('div',{staticClass:\"mt-2\"},[_c('div',{staticClass:\"font-weight-medium textDark--text mb-2\"},[_vm._v(\" How much do you want to spend? \")]),_c('div',{staticClass:\"d-flex align-center\"},[_c('mew-input',{staticClass:\"no-right-border\",attrs:{\"hide-clear-btn\":\"\",\"type\":\"number\",\"error-messages\":_vm.amountErrorMessages},nativeOn:{\"keydown\":function($event){return _vm.preventCharE($event)}},model:{value:(_vm.amount),callback:function ($$v) {_vm.amount=$$v},expression:\"amount\"}}),_c('mew-select',{staticClass:\"selectedFiat no-left-border\",staticStyle:{\"max-width\":\"135px\",\"margin-top\":\"-30px\"},attrs:{\"items\":_vm.fiatCurrencyItems,\"is-custom\":\"\"},model:{value:(_vm.selectedFiat),callback:function ($$v) {_vm.selectedFiat=$$v},expression:\"selectedFiat\"}})],1)]),_c('div',{staticClass:\"mt-2\"},[_c('div',{staticClass:\"d-flex align-center mb-2\"},[_c('div',{staticClass:\"font-weight-medium textDark--text mr-1\"},[_vm._v(\"You will get\")]),_c('mew-tooltip',{staticStyle:{\"height\":\"21px\"},scopedSlots:_vm._u([{key:\"contentSlot\",fn:function(){return [_c('div',[_vm._v(\" \"+_vm._s(_vm.includesFeeText)+\" \"),_c('br'),_c('br'),_vm._v(\" \"+_vm._s(_vm.networkFeeText)+\" \"),_c('br'),_c('br'),_vm._v(\" \"+_vm._s(_vm.dailyLimit)+\" \"),_c('br'),_vm._v(\" \"+_vm._s(_vm.monthlyLimit)+\" \")])]},proxy:true}])})],1),_c('div',{staticClass:\"d-flex align-start\"},[_c('mew-input',{staticClass:\"no-right-border\",attrs:{\"is-read-only\":\"\",\"value\":!_vm.loading\n            ? (_vm.cryptoToFiat + \" \" + _vm.selectedCryptoName + \" ≈ \" + _vm.plusFeeF + \" \")\n            : 'Loading...',\"hide-clear-btn\":\"\"}}),_c('div',{staticClass:\"d-flex align-center token-select-button\",on:{\"click\":function($event){_vm.openTokenSelect = true}}},[_c('mew-token-container',{attrs:{\"img\":_vm.selectedCurrency.img,\"size\":\"28px\"}}),_c('div',{staticClass:\"basic--text\",staticStyle:{\"margin-left\":\"8px\"}},[_vm._v(\" \"+_vm._s(_vm.selectedCurrency.name)+\" \")]),_c('v-icon',{staticClass:\"ml-auto\",attrs:{\"size\":\"20px\",\"color\":\"titlePrimary\"}},[_vm._v(\" mdi-chevron-down \")])],1)],1)]),(!_vm.inWallet)?_c('div',{staticClass:\"mt-2\"},[_c('div',{staticClass:\"font-weight-medium textDark--text mb-2\"},[_vm._v(\" Where should we send your crypto? \")]),_c('module-address-book',{ref:\"addressInput\",attrs:{\"label\":\"Enter Crypto Address\",\"currency\":_vm.selectedCryptoName,\"enable-save-address\":false,\"is-home-page\":true},on:{\"setAddress\":_vm.setAddress}})],1):_vm._e(),_c('mew-button',{staticClass:\"mt-2\",attrs:{\"btn-size\":\"xlarge\",\"has-full-width\":\"\",\"disabled\":_vm.disableBuy,\"title\":_vm.buyBtnTitle,\"is-valid-address-func\":_vm.isValidToAddress},nativeOn:{\"click\":function($event){return _vm.buy.apply(null, arguments)}}}),_c('buy-sell-token-select',{attrs:{\"open\":_vm.openTokenSelect,\"currency-items\":_vm.currencyItems,\"selected-currency\":_vm.selectedCurrency,\"set-currency\":_vm.setCurrency,\"in-wallet\":_vm.inWallet},on:{\"close\":function($event){_vm.openTokenSelect = false}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"py-8 px-8 moonpay-buy-component\">\n    <!-- ========================================================================= -->\n    <!-- Sending amount in fiat -->\n    <!-- ========================================================================= -->\n    <div class=\"mt-2\">\n      <div class=\"font-weight-medium textDark--text mb-2\">\n        How much do you want to spend?\n      </div>\n      <div class=\"d-flex align-center\">\n        <mew-input\n          v-model=\"amount\"\n          hide-clear-btn\n          type=\"number\"\n          :error-messages=\"amountErrorMessages\"\n          class=\"no-right-border\"\n          @keydown.native=\"preventCharE($event)\"\n        />\n        <mew-select\n          v-model=\"selectedFiat\"\n          style=\"max-width: 135px; margin-top: -30px\"\n          :items=\"fiatCurrencyItems\"\n          is-custom\n          class=\"selectedFiat no-left-border\"\n        />\n      </div>\n    </div>\n\n    <!-- ========================================================================= -->\n    <!-- Receiving amount in crypto -->\n    <!-- ========================================================================= -->\n    <div class=\"mt-2\">\n      <div class=\"d-flex align-center mb-2\">\n        <div class=\"font-weight-medium textDark--text mr-1\">You will get</div>\n        <mew-tooltip style=\"height: 21px\">\n          <template #contentSlot>\n            <div>\n              {{ includesFeeText }}\n              <br />\n              <br />\n              {{ networkFeeText }}\n              <br />\n              <br />\n              {{ dailyLimit }}\n              <br />\n              {{ monthlyLimit }}\n            </div>\n          </template>\n        </mew-tooltip>\n      </div>\n      <div class=\"d-flex align-start\">\n        <mew-input\n          is-read-only\n          :value=\"\n            !loading\n              ? `${cryptoToFiat} ${selectedCryptoName} ≈ ${plusFeeF} `\n              : 'Loading...'\n          \"\n          hide-clear-btn\n          class=\"no-right-border\"\n        />\n        <div\n          class=\"d-flex align-center token-select-button\"\n          @click=\"openTokenSelect = true\"\n        >\n          <mew-token-container :img=\"selectedCurrency.img\" size=\"28px\" />\n          <div class=\"basic--text\" style=\"margin-left: 8px\">\n            {{ selectedCurrency.name }}\n          </div>\n          <v-icon class=\"ml-auto\" size=\"20px\" color=\"titlePrimary\">\n            mdi-chevron-down\n          </v-icon>\n        </div>\n      </div>\n    </div>\n\n    <!-- ========================================================================= -->\n    <!-- Receiver's address -->\n    <!-- ========================================================================= -->\n    <div v-if=\"!inWallet\" class=\"mt-2\">\n      <div class=\"font-weight-medium textDark--text mb-2\">\n        Where should we send your crypto?\n      </div>\n      <module-address-book\n        ref=\"addressInput\"\n        label=\"Enter Crypto Address\"\n        :currency=\"selectedCryptoName\"\n        :enable-save-address=\"false\"\n        :is-home-page=\"true\"\n        @setAddress=\"setAddress\"\n      />\n    </div>\n\n    <!-- ========================================================================= -->\n    <!-- BUY NEW button -->\n    <!-- ========================================================================= -->\n    <mew-button\n      class=\"mt-2\"\n      btn-size=\"xlarge\"\n      has-full-width\n      :disabled=\"disableBuy\"\n      :title=\"buyBtnTitle\"\n      :is-valid-address-func=\"isValidToAddress\"\n      @click.native=\"buy\"\n    />\n\n    <!-- ========================================================================= -->\n    <!-- Token select popup -->\n    <!-- ========================================================================= -->\n    <buy-sell-token-select\n      :open=\"openTokenSelect\"\n      :currency-items=\"currencyItems\"\n      :selected-currency=\"selectedCurrency\"\n      :set-currency=\"setCurrency\"\n      :in-wallet=\"inWallet\"\n      @close=\"openTokenSelect = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport MultiCoinValidator from 'multicoin-address-validator';\nimport { isEmpty, cloneDeep, isEqual } from 'lodash';\nimport { mapGetters, mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\nimport { fromWei, toBN } from 'web3-utils';\nimport { ERROR, Toast } from '@/modules/toast/handler/handlerToast';\nimport nodeList from '@/utils/networks';\nimport {\n  formatFloatingPointValue,\n  formatFiatValue\n} from '@/core/helpers/numberFormatHelper';\nimport { getCurrency } from '@/modules/settings/components/currencyList';\nimport { buyContracts } from './tokenList';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport ModuleAddressBook from '@/modules/address-book/ModuleAddressBook.vue';\nimport BuySellTokenSelect from '@/modules/buy-sell/components/TokenSelect.vue';\n\nexport default {\n  name: 'ModuleBuyEth',\n  components: { ModuleAddressBook, BuySellTokenSelect },\n  props: {\n    orderHandler: {\n      type: Object,\n      default: () => {}\n    },\n    defaultCurrency: {\n      type: Object,\n      default: () => {}\n    },\n    inWallet: {\n      type: Boolean,\n      default: false\n    },\n    supportedBuy: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      openTokenSelect: false,\n      selectedCurrency: this.defaultCurrency,\n      loading: true,\n      selectedFiat: {\n        name: 'USD',\n        value: 'USD',\n        // eslint-disable-next-line\n        img: require(`@/assets/images/currencies/USD.svg`)\n      },\n      fetchedData: {},\n      currencyRates: [],\n      amount: '300',\n      toAddress: '',\n      validToAddress: false,\n      gasPrice: '0',\n      web3Connections: {},\n      simplexQuote: {},\n      showMoonpay: true,\n      disableCurrencySelect: true,\n      localCryptoAmount: '0'\n    };\n  },\n  computed: {\n    ...mapGetters('global', ['network', 'getFiatValue']),\n    ...mapState('wallet', ['web3', 'address']),\n    ...mapState('external', ['currencyRate', 'coinGeckoTokens']),\n    ...mapGetters('external', ['contractToToken']),\n    ...mapGetters('wallet', ['tokensList']),\n    includesFeeText() {\n      return `Includes ${this.percentFee} fee (${\n        formatFiatValue(this.minFee, this.currencyConfig).value\n      } min)`;\n    },\n    networkFeeText() {\n      return `${\n        this.selectedCurrency.symbol\n      } network fee (for transfers to your wallet) ~${\n        formatFiatValue(this.networkFeeToFiat, this.currencyConfig).value\n      }`;\n    },\n    dailyLimit() {\n      const moonpayMax = this.max.moonpay;\n      const simplexMax = this.max.simplex;\n      const value = Math.max(moonpayMax.toString(), simplexMax.toString());\n      return `Daily limit: ${\n        formatFiatValue(value.toString(), this.currencyConfig).value\n      }`;\n    },\n    monthlyLimit() {\n      const value = BigNumber(this.fiatMultiplier).times(50000);\n      return `Monthly limit: ${\n        formatFiatValue(value.toString(), this.currencyConfig).value\n      }`;\n    },\n    currencyConfig() {\n      const fiat = this.selectedFiat.value;\n      const rate = this.currencyRate[fiat];\n      const currency = fiat;\n      return { rate, currency };\n    },\n    fiatMultiplier() {\n      if (this.hasData) {\n        const selectedCurrencyPrice = this.fetchedData[0].conversion_rates.find(\n          item => item.fiat_currency === this.selectedFiatName\n        );\n        return selectedCurrencyPrice\n          ? BigNumber(selectedCurrencyPrice.exchange_rate)\n          : toBN(1);\n      }\n      return toBN(1);\n    },\n    selectedFiatName() {\n      return this.selectedFiat.name;\n    },\n    actualAddress() {\n      return this.inWallet ? this.address : this.toAddress;\n    },\n    actualValidAddress() {\n      return this.inWallet ? true : this.validToAddress;\n    },\n    networkFee() {\n      return fromWei(BigNumber(this.gasPrice).times(21000).toString());\n    },\n    priceOb() {\n      return !isEmpty(this.fetchedData)\n        ? this.fetchedData[0].prices.find(\n            item => item.fiat_currency === this.selectedFiatName\n          )\n        : { crypto_currency: 'ETH', fiat_currency: 'USD', price: '3379.08322' };\n    },\n    networkFeeToFiat() {\n      return BigNumber(this.networkFee).times(this.priceOb.price).toString();\n    },\n    minFee() {\n      return BigNumber(4.43).times(this.fiatMultiplier).toString();\n    },\n    plusFee() {\n      const fee = this.isEUR\n        ? BigNumber(BigNumber(0.7).div(100)).times(this.amount)\n        : BigNumber(BigNumber(3.25).div(100)).times(this.amount);\n      const withFee = fee.gt(this.minFee)\n        ? BigNumber(this.amount).minus(fee)\n        : BigNumber(this.amount).minus(fee).minus(this.minFee);\n      return withFee.minus(this.networkFeeToFiat).toString();\n    },\n    plusFeeF() {\n      return formatFiatValue(this.plusFee, this.currencyConfig).value;\n    },\n    percentFee() {\n      return this.isEUR ? '0.7%' : '3.25%';\n    },\n    selectedCryptoName() {\n      return this.selectedCurrency?.symbol ? this.selectedCurrency.symbol : '';\n    },\n    isEUR() {\n      return this.selectedFiatName === 'EUR' || this.selectedFiatName === 'GBP';\n    },\n    disableBuy() {\n      return (\n        (!this.inWallet && !this.actualValidAddress) ||\n        this.loading ||\n        this.amountErrorMessages !== '' ||\n        !this.supportedBuy\n      );\n    },\n    buyBtnTitle() {\n      return 'BUY NOW';\n    },\n    amountErrorMessages() {\n      if (BigNumber(this.amount).isNaN() || BigNumber(this.amount).eq(0)) {\n        return 'Amount required';\n      }\n      if (BigNumber(this.amount).lt(0)) {\n        return `Amount can't be negative`;\n      }\n      if (this.min.gt(this.amount)) {\n        return `Amount can't be below provider's minimum: ${\n          formatFiatValue(this.min.toFixed(), this.currencyConfig).value\n        } ${this.selectedFiatName}`;\n      }\n      if (this.maxVal.lt(this.amount)) {\n        return `Amount can't be above provider's maximum: ${\n          formatFiatValue(this.maxVal.toFixed(), this.currencyConfig).value\n        } ${this.selectedFiatName}`;\n      }\n      return '';\n    },\n    tokens() {\n      if (this.inWallet) {\n        return buyContracts.reduce((arr, item) => {\n          const inList = this.tokensList.find(t => {\n            if (t.contract.toLowerCase() === item.toLowerCase()) return t;\n          });\n          if (inList) {\n            arr.push(inList);\n            return arr;\n          }\n          const token = this.contractToToken(item);\n          if (token) arr.push(token);\n          return arr;\n        }, []);\n      }\n      const arr = new Array();\n      for (const contract of buyContracts) {\n        const token = this.contractToToken(contract);\n        if (token) arr.push(token);\n      }\n      return arr;\n    },\n    currencyItems() {\n      if (!this.supportedBuy) return;\n      const tokensListWPrice =\n        this.currencyRates.length > 0\n          ? this.tokens.map(token => {\n              const priceRate = this.currencyRates.find(rate => {\n                return rate.crypto_currency === token.symbol;\n              });\n              const actualPrice = priceRate?.quotes.find(quote => {\n                return quote.fiat_currency === this.selectedFiatName;\n              });\n              token.price = formatFiatValue(\n                actualPrice ? actualPrice.price : '0',\n                this.currencyConfig\n              ).value;\n              token.value = token.name;\n              token.name = token.symbol;\n              return token;\n            })\n          : this.tokens;\n      const returnedArray = [...tokensListWPrice];\n      return returnedArray;\n    },\n    hasData() {\n      return !isEmpty(this.fetchedData);\n    },\n    cryptoToFiat() {\n      return this.showMoonpay\n        ? this.moonpayCryptoAmount\n        : this.simplexCryptoAmount;\n    },\n    moonpayCryptoAmount() {\n      return formatFloatingPointValue(\n        BigNumber(this.plusFee).div(this.priceOb.price).toString()\n      ).value;\n    },\n    simplexCryptoAmount() {\n      return formatFloatingPointValue(this.simplexQuote.crypto_amount).value;\n    },\n    fiatCurrencyItems() {\n      const arrItems = this.hasData\n        ? this.fetchedData[0].fiat_currencies.filter(item => item !== 'RUB')\n        : ['USD'];\n      return getCurrency(arrItems);\n    },\n    max() {\n      if (this.hasData) {\n        const moonpayMax = this.fetchedData[0]?.limits.find(\n          item => item.fiat_currency === this.selectedFiatName\n        );\n        const simplexMax = this.fetchedData[1]?.limits.find(\n          item => item.fiat_currency === this.selectedFiatName\n        );\n        return {\n          moonpay: moonpayMax\n            ? BigNumber(moonpayMax.limit.max)\n            : BigNumber(12000),\n          simplex: simplexMax\n            ? BigNumber(simplexMax.limit.max)\n            : BigNumber(12000)\n        };\n      }\n      return {\n        moonpay: BigNumber(12000),\n        simplex: BigNumber(12000)\n      };\n    },\n    maxVal() {\n      const moonpayMax = this.max.moonpay;\n      const simplexMax = this.max.simplex;\n      const maxVal = Math.max(moonpayMax.toString(), simplexMax.toString());\n      return BigNumber(maxVal);\n    },\n    min() {\n      if (this.hasData) {\n        const foundLimit = this.fetchedData[0].limits.find(\n          item => item.fiat_currency === this.selectedFiatName\n        );\n        return foundLimit ? BigNumber(foundLimit.limit.min) : BigNumber(30);\n      }\n      return BigNumber(30);\n    },\n    hideSimplex() {\n      return (\n        this.selectedCryptoName === 'USDC' || this.selectedCryptoName === 'USDT'\n      );\n    }\n  },\n  watch: {\n    selectedCurrency: {\n      handler: function (newVal, oldVal) {\n        const supportedCoins = {\n          ETH: 'ETH',\n          BNB: 'BNB',\n          MATIC: 'MATIC'\n        };\n        if (\n          !newVal ||\n          (newVal?.contract?.toLowerCase() === MAIN_TOKEN_ADDRESS &&\n            !supportedCoins[newVal.symbol])\n        ) {\n          this.selectedCurrency = oldVal;\n          return;\n        }\n        if (!isEqual(newVal, oldVal)) {\n          this.fetchCurrencyData();\n        }\n        this.$emit('selectedCurrency', this.selectedCurrency);\n      },\n      deep: true\n    },\n    selectedFiat: {\n      handler: function (newVal, oldVal) {\n        if (!isEqual(newVal, oldVal)) {\n          const token = this.currencyItems.find(\n            item => item.name === this.selectedCryptoName\n          );\n          const price = token.price.substring(1).replace(',', '');\n          this.amount = BigNumber(this.localCryptoAmount)\n            .multipliedBy(price)\n            .toFixed(2);\n          this.localCryptoAmount = BigNumber(this.amount).div(price).toString();\n          this.$emit('selectedFiat', newVal);\n        }\n      },\n      deep: true\n    },\n    network: {\n      handler: function () {\n        this.selectedCurrency = {};\n        this.selectedCurrency = this.defaultCurrency;\n      },\n      deep: true\n    },\n    orderHandler: {\n      handler: function () {\n        this.fetchCurrencyData();\n      },\n      deep: true\n    },\n    amount: {\n      handler: function (newVal) {\n        const simplexMax = this.max.simplex.multipliedBy(this.fiatMultiplier);\n        this.checkMoonPayMax();\n        if (\n          simplexMax.lt(newVal) ||\n          isEmpty(newVal) ||\n          this.min.gt(newVal) ||\n          isNaN(newVal)\n        ) {\n          this.loading = true;\n        } else {\n          this.loading = false;\n          this.getSimplexQuote();\n          this.localCryptoAmount = BigNumber(this.amount)\n            .div(this.priceOb.price)\n            .toString();\n        }\n      }\n    },\n    validToAddress: {\n      handler: function (newVal) {\n        if (!newVal) return;\n        this.$emit('toAddress', this.toAddress);\n        this.getSimplexQuote();\n      }\n    },\n    coinGeckoTokens: {\n      handler: function () {\n        this.fetchCurrencyData();\n      }\n    },\n    openTokenSelect() {\n      this.$emit('openTokenSelect', this.openTokenSelect);\n    }\n  },\n  mounted() {\n    if (!this.inWallet) this.$refs.addressInput.$refs?.addressSelect.clear();\n    this.fetchCurrencyData();\n  },\n  methods: {\n    setAddress(newVal, isValid, data) {\n      if (data.type === 'RESOLVED' && !data.value.includes('.'))\n        this.toAddress = data.value;\n      else this.toAddress = newVal;\n      this.validToAddress = isValid;\n    },\n    async fetchGasPrice() {\n      const supportedNodes = {\n        ETH: 'ETH',\n        BNB: 'BSC',\n        MATIC: 'MATIC'\n      };\n      const nodeType = !supportedNodes[this.selectedCurrency?.symbol]\n        ? 'ETH'\n        : supportedNodes[this.selectedCurrency.symbol];\n      const node = nodeList[nodeType];\n      if (!this.web3Connections[nodeType]) {\n        const web3 = new Web3(node[0].url);\n        this.web3Connections[nodeType] = web3;\n      }\n      this.gasPrice = await this.web3Connections[nodeType].eth.getGasPrice();\n    },\n    isLT(num, num2) {\n      return BigNumber(num).lt(num2);\n    },\n    isValidToAddress(address) {\n      return MultiCoinValidator.validate(address, this.selectedCurrency.symbol);\n    },\n    checkMoonPayMax() {\n      const moonpayMax = this.max.moonpay;\n      const hideMoonpay = this.isLT(moonpayMax, this.amount);\n      this.$emit('hideMoonpay', hideMoonpay);\n    },\n    setCurrency(e) {\n      this.selectedCurrency = e;\n    },\n    fetchCurrencyData() {\n      this.loading = true;\n      this.disableCurrencySelect = true;\n      this.fetchData = {};\n      this.fetchGasPrice();\n      this.orderHandler\n        .getSupportedFiatToBuy(this.selectedCurrency?.symbol)\n        .then(res => {\n          this.orderHandler.getFiatRatesForBuy().then(res => {\n            this.currencyRates = cloneDeep(res);\n            this.loading = false;\n            this.disableCurrencySelect = false;\n          });\n          this.fetchedData = Object.assign({}, res);\n          this.localCryptoAmount = BigNumber(this.amount)\n            .div(this.priceOb.price)\n            .toString();\n        })\n        .catch(e => {\n          Toast(e, {}, ERROR);\n        });\n      this.getSimplexQuote();\n    },\n    getSimplexQuote() {\n      if (\n        this.hideSimplex ||\n        !this.actualValidAddress ||\n        isEmpty(this.amount) ||\n        this.min.gt(this.amount) ||\n        isNaN(this.amount) ||\n        this.max.simplex.lt(this.amount) ||\n        this.amountErrorMessages !== ''\n      )\n        return;\n      this.loading = true;\n      this.disableCurrencySelect = true;\n      this.simplexQuote = {};\n      this.orderHandler\n        .getSimplexQuote(\n          this.selectedCryptoName,\n          this.selectedFiatName,\n          this.amount,\n          this.actualAddress\n        )\n        .then(res => {\n          this.simplexQuote = Object.assign({}, res);\n          this.loading = false;\n          this.disableCurrencySelect = false;\n          this.$emit('simplexQuote', this.simplexQuote);\n          this.compareQuotes();\n        })\n        .catch(e => {\n          Toast(e, {}, ERROR);\n        });\n    },\n    compareQuotes() {\n      const moonpayMax = this.max.moonpay;\n      // Moonpay has better rate and is not above max\n      this.showMoonpay = this.isLT(moonpayMax, this.amount) // max < amount\n        ? false\n        : this.isLT(this.simplexQuote.crypto_amount, this.moonpayCryptoAmount);\n    },\n    buy() {\n      const buyObj = {\n        cryptoToFiat: this.moonpayCryptoAmount,\n        selectedCryptoName: this.selectedCryptoName,\n        plusFeeF: this.plusFeeF,\n        includesFeeText: this.includesFeeText,\n        networkFeeText: this.networkFeeText,\n        dailyLimit: this.dailyLimit,\n        monthlyLimit: this.monthlyLimit,\n        fiatAmount: this.amount\n      };\n      this.checkMoonPayMax();\n      this.$emit('success', [\n        this.simplexQuote,\n        this.toAddress,\n        buyObj,\n        1,\n        this.selectedCurrency,\n        this.selectedFiat\n      ]);\n    },\n    preventCharE(e) {\n      if (e.key === 'e') e.preventDefault();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// Force set button border color(greyMedium) for not selected buttons\n.not-selected {\n  border: 1px solid var(--v-greyMedium-base);\n}\n.icon-holder {\n  border: 2px solid var(--v-greyMedium-base);\n  border-radius: 100px;\n  width: 20px;\n  height: 20px;\n}\n.section-block {\n  height: 145px;\n  border-radius: 12px;\n  left: 0px;\n  top: 0px;\n  box-sizing: border-box;\n  border: 2px solid var(--v-greyMedium-base);\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n  margin: 8px 0px;\n  position: relative;\n}\n.section-block:hover {\n  cursor: pointer;\n  border: 2px solid #1eb19b;\n  background-color: #e5eaee;\n}\n.selected {\n  border: 2px solid #1eb19b;\n}\n.provider-logo {\n  position: absolute;\n  top: 18px;\n  right: 20px;\n}\n.token-select-button {\n  height: 62px;\n  border: 1px solid var(--v-inputBorder-base);\n  border-radius: 0 8px 8px 0;\n  width: 135px;\n  padding: 0 11px 0 14px;\n  line-height: initial;\n  user-select: none;\n  cursor: pointer;\n  &:hover {\n    border: 1px solid var(--v-greyPrimary-base);\n  }\n}\n</style>\n<style lang=\"scss\">\n.moonpay-buy-component {\n  .v-input__slot {\n    height: 62px !important;\n  }\n\n  .no-right-border {\n    fieldset {\n      border-radius: 8px 0 0 8px !important;\n    }\n  }\n  .no-left-border fieldset {\n    border-radius: 0 8px 8px 0 !important;\n  }\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BuyComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BuyComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BuyComponent.vue?vue&type=template&id=22bb49e2&scoped=true&\"\nimport script from \"./BuyComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./BuyComponent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BuyComponent.vue?vue&type=style&index=0&id=22bb49e2&prod&lang=scss&scoped=true&\"\nimport style1 from \"./BuyComponent.vue?vue&type=style&index=1&id=22bb49e2&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"22bb49e2\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}