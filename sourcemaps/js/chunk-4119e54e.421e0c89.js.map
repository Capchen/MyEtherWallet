{"version":3,"sources":["webpack:///./node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/baseTransaction.js","webpack:///./node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/index.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/types.js","webpack:///./node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/chains/index.js","webpack:///./src/modules/send/errors.js","webpack:///./src/modules/send/handlers/handlerSend.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/util.js","webpack:///./node_modules/core-js/modules/web.url.to-json.js","webpack:///./node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","webpack:///./src/modules/send/ModuleSend.vue?6529","webpack:///src/modules/send/ModuleSend.vue","webpack:///./src/modules/send/ModuleSend.vue?4e9d","webpack:///./src/modules/send/ModuleSend.vue","webpack:///./node_modules/@ethereumjs/tx/dist.browser/index.js","webpack:///./src/core/helpers/addressUtils.js","webpack:///./src/modules/send/ModuleSend.vue?d1ee","webpack:///./node_modules/@ethereumjs/tx/node_modules/@ethereumjs/common/dist.browser/eips/index.js","webpack:///./node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","defineProperty","exports","ethereumjs_util_1","baseTransaction_1","types_1","util_1","TRANSACTION_TYPE","TRANSACTION_TYPE_BUFFER","Buffer","from","toString","padStart","AccessListEIP2930Transaction","_super","txData","opts","_a","_b","_this","type","DEFAULT_HARDFORK","chainId","accessList","gasPrice","common","_getCommon","chainIdBN","isActivatedEIP","Error","activeCapabilities","concat","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","BN","toBuffer","_validateCannotExceedMaxInteger","mul","gasLimit","gt","MAX_INTEGER","msg","_errorMsg","v","eqn","gteHardfork","N_DIV_2","checkMaxInitCodeSize","data","freeze","get","enumerable","configurable","fromTxData","fromSerializedTx","serialized","slice","equals","values","rlp","decode","isArray","fromValuesArray","fromRlpSerializedTx","nonce","to","validateNoLeadingZeroes","emptyAccessList","undefined","getDataFee","cache","dataFee","hardfork","cost","iaddn","getDataFeeEIP2930","isFrozen","getUpfrontCost","add","raw","bnToUnpaddedBuffer","buf","serialize","base","encode","getMessageToSign","hashMessage","message","keccak256","hash","isSigned","getMessageToVerifySignature","getSenderPublicKey","msgHash","yParity","ecrecover","addn","_processSignature","txOptions","toJSON","accessListJSON","getAccessListJSON","bnToHex","errorStr","_getSharedErrorPostfix","BaseTransaction","default","Transaction","_validateTxV","chainIdDoubled","muln","eq","Capability","EIP155ReplayProtection","_getMessageToSign","supports","unpadBuffer","rlphash","vBN","iadd","ltn","isValidEIP155V","numSub","subn","isEven","divn","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","vAndChainIdMeetEIP155Conditions","__createBinding","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","__setModuleDefault","__importStar","mod","result","__values","common_1","DEFAULT_CHAIN","Chain","Mainnet","Hardfork","Istanbul","_type","toNumber","toB","vB","rB","sB","Address","capability","includes","validate","stringError","errors","getBaseFee","verifySignature","fee","param","toCreationAddress","txDataZero","txDataNonZero","dataLength","Math","ceil","initCodeCost","imuln","publicKey","getSenderAddress","publicToAddress","sign","privateKey","hackApplied","ecsign","tx","index","indexOf","splice","copy","isSupportedChainId","chain","forCustomChain","name","networkId","bits","cannotEqual","e_1","entries","_c","_d","key","gte","MAX_UINT64","e_1_1","return","bufferToHex","hf","postfix","ConsensusAlgorithm","ConsensusType","CustomChain","events_1","crc_32_1","chains_1","hardforks_1","eips_1","Common","_supportedHardforks","_eips","_customChains","customChains","_chainParams","setChain","defaultHardfork","hardforks","_e","forkHash","_calcForkHash","_hardfork","supportedHardforks","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","customChainParams","initializedChains","_getInitializedChains","Boolean","isBN","name_1","e_2","plainCustomChains","map","required","required_1","required_1_1","e_2_1","e_3","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","hfChanges","emit","e_3_1","getHardforkByBlockNumber","blockNumber","td","e_4","toType","TypeOutput","minTdHF","maxTdHF","previousHF","Chainstart","block","e_4_1","msgAdd","hardforkGteHardfork","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","e_5","hfs","hfs_1","hfs_1_1","e_5_1","chainName","e_6","supportedHf","e_6_1","e_7","_loop_1","eip","EIPs","minHF","this_1","requiredEIPs","forEach","elem","eips_2","eips_2_1","e_7_1","topic","e_8","paramByEIP","e_8_1","paramByHardfork","e_9","e_10","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_10_1","e_9_1","eipParams","paramByBlock","activeHfs","activeHardforks","e_11","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","e_11_1","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","e_12","onlyActive","posHf1","posHf2","hardforks_2","hardforks_2_1","e_12_1","hardforkIsActiveOnChain","e_13","e_13_1","e_14","hfs_2","hfs_2_1","e_14_1","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","nextHardforkBlock","nextHardforkBlockBN","nextHfBlock","reduce","acc","isNextHardforkBlock","e_15","genesis","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","e_15_1","inputBuffer","forkhash","intToBuffer","hardforkForForkHash","resArray","filter","genesisState","e_16","chainArrayWithGenesis","e_16_1","bootstrapNodes","dnsNetworks","networkIdBN","consensusType","e_17","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","e_17_1","consensusAlgorithm","e_18","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","e_18_1","consensusConfig","e_19","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","e_19_1","getPrototypeOf","removeAllListeners","EventEmitter","FeeMarketEIP1559Transaction","maxFeePerGas","maxPriorityFeePerGas","lt","baseFee","inclusionFeePerGas","min","sub","isAccessList","isAccessListBuffer","input","firstItem","__importDefault","chains","mainnet_json_1","ropsten_json_1","rinkeby_json_1","kovan_json_1","goerli_json_1","sepolia_json_1","names","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","customChains_1","customChains_1_1","INVALID_TO_ADDRESS","INVALID_FROM_ADDRESS","INVALID_DATA_HEX","NEGATIVE_VALUE","SendTransaction","$store","vuexStore","mapState","mapGetters","currency","localGasPrice","TX","destination","gas","destinationValue","_to","isAddress","ErrorList","toDetails","isToken","toChecksumAddress","contract","_from","toHex","toBN","_gasLimit","_value","isNaN","isNull","_valueBN","BigNumber","toFixed","setData","getTokenTransferABI","_data","isHexStrict","SanitizeHex","_nonce","_currency","balance","gasPriceBN","address","setFrom","_setTo","_setValue","_setGasPrice","web3","eth","estimateGas","MAIN_TOKEN_ADDRESS","amount","hasAmountToken","lte","toBNSafe","hasGas","txFee","_toAddress","jsonInterface","constant","inputs","outputs","payable","stateMutability","Web3Contract","methods","transfer","toLowerCase","encodeABI","getTransactionCount","setNonce","_tx","json","sendTransaction","helpers","hasValidDecimals","bufferAccessList","newAccessList","item","addressBuffer","storageItems","storageKeys","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","addresses","$","target","proto","URL","render","_vm","_h","$createElement","_self","staticClass","attrs","scopedSlots","_u","fn","selectedBalance","showSelectedBalance","ref","tokens","selectedCurrency","on","setCurrency","amountErrorMessage","title","disabled","disableSwapBtn","method","setEntireBal","buyMoreStr","openMoonpay","val","setAmount","currencyName","setAddress","txFeeIsReady","feeError","totalCost","hasEnoughEth","isFromNetworkCurrency","handleLocalGasPrice","expandPanel","openedPanels","closeToggle","_v","$event","setGasLimit","defaultGasLimit","_s","formattedDefaultGasLimit","$t","gasLimitError","directives","rawName","expression","dataRules","dataInvalidHexMessage","nativeOn","verifyHexFormat","model","callback","$$v","proxy","isDisabledNextBtn","send","clear","staticRenderFns","components","ModuleAddressBook","SendLowBalanceNotice","AppButtonBalance","AppTransactionFee","mixins","props","prefilledAmount","prefilledData","prefilledAddress","prefilledGasLimit","toAddress","sendTx","isValidAddress","userInputType","toggleTitle","amountError","gasEstimationError","gasEstimationIsReady","selectedMax","computed","plus","showBalanceNotice","tokensList","hasNoEth","text","linkText","link","imgs","total","divider","selectLabel","header","customTokens","isValidAmount","isValidGasLimit","isEthNetwork","multiwatch","txFeeETH","currencyDecimals","getCalculatedAmount","allValidInputs","actualGasPrice","isValidForGas","watch","isPrefilled","handler","deep","immediate","newVal","network","mounted","created","localGasPriceWatcher","setAmountError","setGasLimitError","addr","setSendTransaction","estimateAndSetGas","then","catch","window","submitTransaction","Toast","prefillForm","convertToDisplay","decimals","isEmpty","max","component","__exportStar","TransactionFactory","legacyTransaction_1","eip2930Transaction_1","transactionFactory_1","eip1559Transaction_1","utils","1153","1559","2315","2537","2565","2718","2929","2930","3198","3529","3540","3541","3554","3607","3651","3670","3675","3855","3860","4345","4399","5133","_1","txType","fromSerializedData","EIP","fromBlockBodyData","isBuffer","getTransactionClass","transactionID","_common","legacyTxn"],"mappings":"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,uCAEA,sBACA,gCAEAC,QAzDA,WA0DA,cAEAtK,QA5DA,WA6DA,aACA,+BAEA0J,SAhEA,SAgEAW,GACA,4EAGAE,QAlZA,WAmZA,0BACA,qCACA,yCACA,+CACA,mDAEAC,QAzZA,WAyZA,WACA,+DACA,wBACA,KACA,4DACA,sBACA,KACA,2DACA,iBACA,wBAEA,MAEAjJ,SACAkJ,qBADA,SACAJ,GAAA,MACA,2BACA,6FACA,iDAGA,kBACA,uBACA,yCACApB,yBACA,uBACA,yCACAnJ,UAEA,qBAGA6G,gBAlBA,WAmBA,gDACA,8CACA,eACA,6CAMAO,MA5BA,WA6BA,qCACA,gCACA,kBACA,yCACA,iBACA,uBACA,gBACA,eACA,sBACA,6BACA,sBACA,oBACA,2BACA,6BACA,uBAGA,0BACA,qCACA,+CACA,yCAKAtB,YAtDA,WAuDA,uBACA,mCACA,uCAQA8E,eAjEA,SAiEA7nB,GACA,QACA,aACA,6CAEA,2DACA,gCACAA,EACA,gCAGA,0CACA,kCACA,gDACA,GACA,8BAEA,oBAGA,6BAQA8nB,iBA7FA,SA6FA9nB,GACA,EACA,cACA,sDACA,cACA,2DACA,2DACA,2DAEA,sBAGA,+BAGAsiB,WA5GA,SA4GAyF,EAAA3C,EAAAC,GACA,iBACA,sBACA,sBAEA2C,mBAjHA,WAkHA,iCACA,wBAEAC,kBArHA,WAqHA,WACA,6BACA,YACAvK,cACAwK,MAAA,YACA,wCACA,+CACA,+BACA,wBACA,wBACA,6BAEAC,OAAA,YACA,+BACA,8BAGA/D,KAtIA,WAsIA,WACAgE,qBACA,YACAC,oBACAH,MAAA,WACA,aAEAC,OAAA,YACA,UACA,YACAG,gCAIAC,YApJA,WAoJA,WACA,qBACA,uBACA,kCACA,kEAEA/jB,EACA,+EACA,iCACA,qCACA,qCACA,+CACA,qCACA8jB,kEACA,wBAGAE,iBArKA,SAqKA5K,EAAA6K,GACA,mCACA,2CAEAzG,aAzKA,WA0KA,GACA0G,6CACA,wCACA,CACA,kDACA,gDAEA,eACA,sBACA,8BACA,iCAEA,IAIAtG,UA1LA,SA0LApiB,EAAA2oB,GACA,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","file":"js/chunk-4119e54e.421e0c89.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */ (function (_super) {\n    __extends(AccessListEIP2930Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function AccessListEIP2930Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'berlin';\n        var chainId = txData.chainId, accessList = txData.accessList, gasPrice = txData.gasPrice;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        // EIP-2718 check is done in Common\n        if (!_this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasPrice === '' ? '0x' : gasPrice));\n        _this._validateCannotExceedMaxInteger({\n            gasPrice: _this.gasPrice,\n        });\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new AccessListEIP2930Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n     */\n    AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        var _a = __read(values, 11), chainId = _a[0], nonce = _a[1], gasPrice = _a[2], gasLimit = _a[3], to = _a[4], value = _a[5], data = _a[6], accessList = _a[7], v = _a[8], r = _a[9], s = _a[10];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        var emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    AccessListEIP2930Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n     */\n    AccessListEIP2930Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    AccessListEIP2930Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 8);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    AccessListEIP2930Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, yParity = _b.yParity, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    AccessListEIP2930Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    AccessListEIP2930Transaction.prototype.errorStr = function () {\n        var _a, _b;\n        var errorStr = this._getSharedErrorPostfix();\n        // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n        errorStr += \" gasPrice=\".concat(this.gasPrice, \" accessListCount=\").concat((_b = (_a = this.accessList) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    AccessListEIP2930Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = AccessListEIP2930Transaction;\n//# sourceMappingURL=eip2930Transaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.rlphash)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: _super.prototype.getDataFee.call(this),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return _super.prototype.getDataFee.call(this);\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        // In contrast to the tx type transaction implementations the `hash()` function\n        // for the legacy tx does not throw if the tx is not signed.\n        // This has been considered for inclusion but lead to unexpected backwards\n        // compatibility problems (no concrete reference found, needs validation).\n        //\n        // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n        // September, 2021 as well as work done before.\n        //\n        // This should be updated along the next major version release by adding:\n        //\n        //if (!this.isSigned()) {\n        //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n        //  throw new Error(msg)\n        //}\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.rlphash)(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var message = this._getMessageToSign();\n        return (0, ethereumjs_util_1.rlphash)(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        // Check for valid v values in the scope of a signed legacy tx\n        if (v !== undefined) {\n            // v is 1. not matching the EIP-155 chainId included case and...\n            // v is 2. not matching the classic v=27 or v=28 case\n            if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n                throw new Error(\"Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = \".concat(v));\n            }\n        }\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \".concat(v, \" and chain id \").concat(common.chainIdBN(), \". See the Common parameter of the Transaction constructor to set the chain id.\"));\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" gasPrice=\".concat(this.gasPrice);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = void 0;\nvar common_1 = __importStar(require(\"@ethereumjs/common\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */ (function () {\n    function BaseTransaction(txData, opts) {\n        this.cache = {\n            hash: undefined,\n            dataFee: undefined,\n        };\n        /**\n         * List of tx type defining EIPs,\n         * e.g. 1559 (fee market) and 2930 (access lists)\n         * for FeeMarketEIP1559Transaction objects\n         */\n        this.activeCapabilities = [];\n        /**\n         * The default chain the tx falls back to if no Common\n         * is provided and if the chain can't be derived from\n         * a passed in chainId (only EIP-2718 typed txs) or\n         * EIP-155 signature (legacy txs).\n         *\n         * @hidden\n         */\n        this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n        var nonce = txData.nonce, gasLimit = txData.gasLimit, to = txData.to, value = txData.value, data = txData.data, v = txData.v, r = txData.r, s = txData.s, type = txData.type;\n        this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n        this.txOptions = opts;\n        var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n        var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n        var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n        var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n        this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n        this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n        this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n        this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n        this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n        this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n        this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n        this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n        this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s });\n        // geth limits gasLimit to 2^64-1\n        this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64);\n        // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n        this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true);\n    }\n    Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n        /**\n         * Alias for {@link BaseTransaction.type}\n         *\n         * @deprecated Use `type` instead\n         */\n        get: function () {\n            return this.type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTransaction.prototype, \"type\", {\n        /**\n         * Returns the transaction type.\n         *\n         * Note: legacy txs will return tx type `0`.\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if a tx type defining capability is active\n     * on a tx, for example the EIP-1559 fee market mechanism\n     * or the EIP-2930 access list feature.\n     *\n     * Note that this is different from the tx type itself,\n     * so EIP-2930 access lists can very well be active\n     * on an EIP-1559 tx for example.\n     *\n     * This method can be useful for feature checks if the\n     * tx type is unknown (e.g. when instantiated with\n     * the tx factory).\n     *\n     * See `Capabilites` in the `types` module for a reference\n     * on all supported capabilities.\n     */\n    BaseTransaction.prototype.supports = function (capability) {\n        return this.activeCapabilities.includes(capability);\n    };\n    BaseTransaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (this.getBaseFee().gt(this.gasLimit)) {\n            errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n        }\n        if (this.isSigned() && !this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        return stringError ? errors : errors.length === 0;\n    };\n    /**\n     * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    BaseTransaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n        if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    BaseTransaction.prototype.getDataFee = function () {\n        var txDataZero = this.common.param('gasPrices', 'txDataZero');\n        var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n        var cost = 0;\n        for (var i = 0; i < this.data.length; i++) {\n            this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero);\n        }\n        cost = new ethereumjs_util_1.BN(cost);\n        if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n            var dataLength = Math.ceil(this.data.length / 32);\n            var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n            cost.iadd(initCodeCost);\n        }\n        return cost;\n    };\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    BaseTransaction.prototype.toCreationAddress = function () {\n        return this.to === undefined || this.to.buf.length === 0;\n    };\n    BaseTransaction.prototype.isSigned = function () {\n        var _a = this, v = _a.v, r = _a.r, s = _a.s;\n        if (this.type === 0) {\n            if (!v || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (v === undefined || !r || !s) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    BaseTransaction.prototype.verifySignature = function () {\n        try {\n            // Main signature verification is done in `getSenderPublicKey()`\n            var publicKey = this.getSenderPublicKey();\n            return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Returns the sender's address\n     */\n    BaseTransaction.prototype.getSenderAddress = function () {\n        return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n    };\n    /**\n     * Signs a transaction.\n     *\n     * Note that the signed tx is returned as a new object,\n     * use as follows:\n     * ```javascript\n     * const signedTx = tx.sign(privateKey)\n     * ```\n     */\n    BaseTransaction.prototype.sign = function (privateKey) {\n        if (privateKey.length !== 32) {\n            var msg = this._errorMsg('Private key must be 32 bytes in length.');\n            throw new Error(msg);\n        }\n        // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n        // and want to recreate a signature (where EIP155 should be applied)\n        // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n        // 2021-06-23\n        var hackApplied = false;\n        if (this.type === 0 &&\n            this.common.gteHardfork('spuriousDragon') &&\n            !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            hackApplied = true;\n        }\n        var msgHash = this.getMessageToSign(true);\n        var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey), v = _a.v, r = _a.r, s = _a.s;\n        var tx = this._processSignature(v, r, s);\n        // Hack part 2\n        if (hackApplied) {\n            var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n            if (index > -1) {\n                this.activeCapabilities.splice(index, 1);\n            }\n        }\n        return tx;\n    };\n    /**\n     * Does chain ID checks on common and returns a common\n     * to be used on instantiation\n     * @hidden\n     *\n     * @param common - {@link Common} instance from tx options\n     * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n     */\n    BaseTransaction.prototype._getCommon = function (common, chainId) {\n        var _a;\n        // Chain ID provided\n        if (chainId) {\n            var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n            if (common) {\n                if (!common.chainIdBN().eq(chainIdBN)) {\n                    var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n                    throw new Error(msg);\n                }\n                // Common provided, chain ID does match\n                // -> Return provided Common\n                return common.copy();\n            }\n            else {\n                if (common_1.default.isSupportedChainId(chainIdBN)) {\n                    // No Common, chain ID supported by Common\n                    // -> Instantiate Common with chain ID\n                    return new common_1.default({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK });\n                }\n                else {\n                    // No Common, chain ID not supported by Common\n                    // -> Instantiate custom Common derived from DEFAULT_CHAIN\n                    return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n                        name: 'custom-chain',\n                        networkId: chainIdBN,\n                        chainId: chainIdBN,\n                    }, this.DEFAULT_HARDFORK);\n                }\n            }\n        }\n        else {\n            // No chain ID provided\n            // -> return Common provided or create new default Common\n            return ((_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }));\n        }\n    };\n    /**\n     * Validates that an object with BN values cannot exceed the specified bit limit.\n     * @param values Object containing string keys and BN values\n     * @param bits Number of bits to check (64 or 256)\n     * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n     */\n    BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n        var e_1, _a;\n        if (bits === void 0) { bits = 256; }\n        if (cannotEqual === void 0) { cannotEqual = false; }\n        try {\n            for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                switch (bits) {\n                    case 64:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    case 256:\n                        if (cannotEqual) {\n                            if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        else {\n                            if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                                throw new Error(msg);\n                            }\n                        }\n                        break;\n                    default: {\n                        var msg = this._errorMsg('unimplemented bits value');\n                        throw new Error(msg);\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Returns the shared error postfix part for _error() method\n     * tx type implementations.\n     */\n    BaseTransaction.prototype._getSharedErrorPostfix = function () {\n        var hash = '';\n        try {\n            hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var isSigned = '';\n        try {\n            isSigned = this.isSigned().toString();\n        }\n        catch (e) {\n            hash = 'error';\n        }\n        var hf = '';\n        try {\n            hf = this.common.hardfork();\n        }\n        catch (e) {\n            hf = 'error';\n        }\n        var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n        postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n        return postfix;\n    };\n    return BaseTransaction;\n}());\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=baseTransaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"GrayGlacier\"] = \"grayGlacier\";\n    Hardfork[\"MergeForkIdTransition\"] = \"mergeForkIdTransition\";\n    Hardfork[\"Merge\"] = \"merge\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _this = this;\n        var _b, _c;\n        _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                }, opts);\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, __assign({ hardfork: Hardfork.Berlin }, opts));\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return require('./genesisStates/mainnet.json');\n            case 'ropsten':\n                return require('./genesisStates/ropsten.json');\n            case 'rinkeby':\n                return require('./genesisStates/rinkeby.json');\n            case 'kovan':\n                return require('./genesisStates/kovan.json');\n            case 'goerli':\n                return require('./genesisStates/goerli.json');\n            case 'sepolia':\n                return require('./genesisStates/sepolia.json');\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        var copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n        copy.removeAllListeners();\n        return copy;\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports.default = Common;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nvar FeeMarketEIP1559Transaction = /** @class */ (function (_super) {\n    __extends(FeeMarketEIP1559Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function FeeMarketEIP1559Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _this = this;\n        var _a, _b;\n        _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE }), opts) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'london';\n        var chainId = txData.chainId, accessList = txData.accessList, maxFeePerGas = txData.maxFeePerGas, maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        if (!_this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.maxFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        _this._validateCannotExceedMaxInteger({\n            maxFeePerGas: _this.maxFeePerGas,\n            maxPriorityFeePerGas: _this.maxPriorityFeePerGas,\n        });\n        if (_this.gasLimit.mul(_this.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n            var msg = _this._errorMsg('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n            throw new Error(msg);\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            var msg = _this._errorMsg('The y-parity of the transaction should either be 0 or 1');\n            throw new Error(msg);\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = _this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        if (_this.common.isActivatedEIP(3860)) {\n            (0, util_1.checkMaxInitCodeSize)(_this.common, _this.data.length);\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \".concat(TRANSACTION_TYPE, \", received: \").concat(serialized\n                .slice(0, 1)\n                .toString('hex')));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n     */\n    FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        var _a = __read(values, 12), chainId = _a[0], nonce = _a[1], maxPriorityFeePerGas = _a[2], maxFeePerGas = _a[3], gasLimit = _a[4], to = _a[5], value = _a[6], data = _a[7], accessList = _a[8], v = _a[9], r = _a[10], s = _a[11];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, maxPriorityFeePerGas: maxPriorityFeePerGas, maxFeePerGas: maxFeePerGas, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new FeeMarketEIP1559Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            maxPriorityFeePerGas: maxPriorityFeePerGas,\n            maxFeePerGas: maxFeePerGas,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: cost,\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n        if (baseFee === void 0) { baseFee = new ethereumjs_util_1.BN(0); }\n        var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n        var gasPrice = inclusionFeePerGas.add(baseFee);\n        return this.gasLimit.mul(gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n     * with {@link Block.fromValuesArray}.\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n     */\n    FeeMarketEIP1559Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceding and concatenated to\n     * the RLP encoding of the values.\n     */\n    FeeMarketEIP1559Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 9);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.keccak256)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    FeeMarketEIP1559Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call hash method if transaction is not signed');\n            throw new Error(msg);\n        }\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.keccak256)(this.serialize());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.keccak256)(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('Cannot call this method if transaction is not signed');\n            throw new Error(msg);\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s));\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = __assign(__assign({}, this.txOptions), { common: this.common });\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: (0, ethereumjs_util_1.bnToHex)(this.chainId),\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            maxPriorityFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),\n            maxFeePerGas: (0, ethereumjs_util_1.bnToHex)(this.maxFeePerGas),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    FeeMarketEIP1559Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" maxFeePerGas=\".concat(this.maxFeePerGas, \" maxPriorityFeePerGas=\").concat(this.maxPriorityFeePerGas);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    FeeMarketEIP1559Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = FeeMarketEIP1559Transaction;\n//# sourceMappingURL=eip1559Transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(require(\"./mainnet.json\"));\nvar ropsten_json_1 = __importDefault(require(\"./ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(require(\"./rinkeby.json\"));\nvar kovan_json_1 = __importDefault(require(\"./kovan.json\"));\nvar goerli_json_1 = __importDefault(require(\"./goerli.json\"));\nvar sepolia_json_1 = __importDefault(require(\"./sepolia.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '11155111': 'sepolia',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        sepolia: sepolia_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map","export default {\n  INVALID_TO_ADDRESS: 'Invalid to address',\n  INVALID_FROM_ADDRESS: 'Invalid from address',\n  INVALID_DATA_HEX: 'Invalid hex string for data',\n  NEGATIVE_VALUE: 'negative value'\n};\n","import { toBN, toHex, toChecksumAddress, isHexStrict } from 'web3-utils';\nimport { isAddress } from '@/core/helpers/addressUtils';\nimport SanitizeHex from '@/core/helpers/sanitizeHex';\nimport { Transaction } from '@ethereumjs/tx';\nimport { mapState, mapGetters } from 'vuex';\nimport vuexStore from '@/core/store';\nimport ErrorList from '../errors';\nimport Web3Contract from 'web3-eth-contract';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport hasValidDecimals from '@/core/helpers/hasValidDecimals.js';\nimport { isNull } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { toBNSafe } from '@/core/helpers/numberFormatHelper';\n\nclass SendTransaction {\n  constructor() {\n    this.$store = vuexStore;\n    Object.assign(this, mapState('wallet', ['balance', 'web3', 'address']));\n    Object.assign(this, mapGetters('global', ['network']));\n    this.currency = null;\n    this.localGasPrice = '0';\n    this.TX = {\n      from: '0x',\n      to: '0x',\n      destination: '0x',\n      nonce: '0x',\n      gasPrice: '0x',\n      gas: '0x5208', //21000\n      value: '0x',\n      destinationValue: '0x',\n      data: '0x'\n    };\n  }\n  setTo(_to, _type) {\n    if (isAddress(_to)) {\n      this.TX.destination = _to;\n      this.TX.toDetails = _type;\n    } else throw ErrorList.INVALID_TO_ADDRESS;\n  }\n  _setTo() {\n    this.TX.to = this.isToken()\n      ? toChecksumAddress(this.currency.contract)\n      : toChecksumAddress(this.TX.destination);\n  }\n  setFrom(_from) {\n    if (isAddress(_from)) this.TX.from = _from;\n    else throw ErrorList.INVALID_FROM_ADDRESS;\n  }\n  _setGasPrice() {\n    this.TX.gasPrice = toHex(toBN(this.localGasPrice));\n  }\n  setGasLimit(_gasLimit) {\n    this.TX.gas = toHex(toBN(_gasLimit));\n  }\n  setLocalGasPrice(gasPrice) {\n    this.localGasPrice = toHex(toBN(gasPrice));\n  }\n  setValue(_value) {\n    if (isNaN(_value) || isNull(_value)) _value = 0;\n    const _valueBN = new BigNumber(_value);\n    if (!_valueBN.lt(0)) this.TX.destinationValue = toHex(_valueBN.toFixed());\n    else throw ErrorList.NEGATIVE_VALUE;\n  }\n  _setValue() {\n    if (this.isToken()) {\n      this.TX.value = '0x00';\n      this.setData(\n        this.getTokenTransferABI(this.TX.destinationValue, this.TX.destination)\n      );\n    } else {\n      this.TX.value = toHex(toBN(this.TX.destinationValue));\n    }\n  }\n  setData(_data) {\n    if (isHexStrict(_data)) this.TX.data = SanitizeHex(_data);\n    else throw ErrorList.INVALID_DATA_HEX;\n  }\n  setNonce(_nonce) {\n    this.TX.nonce = toHex(toBN(_nonce));\n  }\n  setCurrency(_currency) {\n    this.currency = _currency;\n    this.TX.data = '0x';\n  }\n  getEntireBal() {\n    if (this.isToken()) {\n      return this.currency.balance;\n    }\n    const gasPriceBN = toBN(this.localGasPrice);\n    const fee = gasPriceBN.mul(toBN(this.TX.gas));\n    return this.balance().gt(this.balance().sub(fee))\n      ? this.balance().sub(fee)\n      : 0;\n  }\n  txFee() {\n    return toBN(this.localGasPrice).mul(toBN(this.TX.gas));\n  }\n  estimateGas() {\n    if (this.address()) this.setFrom(this.address());\n    this._setTo();\n    this._setValue();\n    this._setGasPrice();\n    return this.web3().eth.estimateGas({\n      data: this.TX.data,\n      from: this.TX.from,\n      to: this.TX.to,\n      value: this.TX.value\n    });\n  }\n  isToken() {\n    return this.currency?.contract !== MAIN_TOKEN_ADDRESS;\n  }\n  hasEnoughBalance() {\n    const amount = toBN(this.TX.destinationValue);\n    if (this.isToken() && this.currency.balance) {\n      const hasAmountToken = amount.lte(toBNSafe(this.currency.balance));\n      const hasGas = this.txFee().lte(this.balance());\n      return hasAmountToken && hasGas;\n    }\n    return amount.add(this.txFee()).lte(this.balance());\n  }\n  getTokenTransferABI(amount, _toAddress) {\n    amount = toBN(amount);\n    const jsonInterface = [\n      {\n        constant: false,\n        inputs: [\n          { name: '_to', type: 'address' },\n          { name: '_amount', type: 'uint256' }\n        ],\n        name: 'transfer',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function'\n      }\n    ];\n    const contract = new Web3Contract(jsonInterface);\n    return contract.methods\n      .transfer(_toAddress.toLowerCase(), amount)\n      .encodeABI();\n  }\n  async submitTransaction() {\n    try {\n      this._setTo();\n      this._setValue();\n      this._setGasPrice();\n      const nonce = await this.web3().eth.getTransactionCount(this.address());\n      this.setNonce(nonce);\n      this.TX.gasLimit = this.TX.gas;\n      const _tx = Transaction.fromTxData(this.TX);\n      const json = _tx.toJSON(true);\n      json.from = this.address();\n      json.toDetails = this.TX.toDetails;\n      return this.web3().eth.sendTransaction(json);\n    } catch (e) {\n      return e;\n    }\n  }\n}\nSendTransaction.helpers = {\n  hasValidDecimals\n};\nexport default SendTransaction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.checkMaxInitCodeSize = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nfunction checkMaxInitCodeSize(common, length) {\n    if (length > common.param('vm', 'maxInitCodeSize')) {\n        throw new Error(\"the initcode size of this transaction is too large: it is \".concat(length, \" while the max is \").concat(common.param('vm', 'maxInitCodeSize')));\n    }\n}\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\nvar AccessLists = /** @class */ (function () {\n    function AccessLists() {\n    }\n    AccessLists.getAccessListData = function (accessList) {\n        var AccessListJSON;\n        var bufferAccessList;\n        if (accessList && (0, types_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            var newAccessList = [];\n            for (var i = 0; i < accessList.length; i++) {\n                var item = accessList[i];\n                var addressBuffer = (0, ethereumjs_util_1.toBuffer)(item.address);\n                var storageItems = [];\n                for (var index = 0; index < item.storageKeys.length; index++) {\n                    storageItems.push((0, ethereumjs_util_1.toBuffer)(item.storageKeys[index]));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n            // build the JSON\n            var json = [];\n            for (var i = 0; i < bufferAccessList.length; i++) {\n                var data = bufferAccessList[i];\n                var address = (0, ethereumjs_util_1.bufferToHex)(data[0]);\n                var storageKeys = [];\n                for (var item = 0; item < data[1].length; item++) {\n                    storageKeys.push((0, ethereumjs_util_1.bufferToHex)(data[1][item]));\n                }\n                var jsonItem = {\n                    address: address,\n                    storageKeys: storageKeys,\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        return {\n            AccessListJSON: AccessListJSON,\n            accessList: bufferAccessList,\n        };\n    };\n    AccessLists.verifyAccessList = function (accessList) {\n        for (var key = 0; key < accessList.length; key++) {\n            var accessListItem = accessList[key];\n            var address = accessListItem[0];\n            var storageSlots = accessListItem[1];\n            if (accessListItem[2] !== undefined) {\n                throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n            }\n            if (address.length != 20) {\n                throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n            }\n            for (var storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n                if (storageSlots[storageSlot].length != 32) {\n                    throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n                }\n            }\n        }\n    };\n    AccessLists.getAccessListJSON = function (accessList) {\n        var accessListJSON = [];\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var JSONItem = {\n                address: '0x' + (0, ethereumjs_util_1.setLengthLeft)(item[0], 20).toString('hex'),\n                storageKeys: [],\n            };\n            var storageSlots = item[1];\n            for (var slot = 0; slot < storageSlots.length; slot++) {\n                var storageSlot = storageSlots[slot];\n                JSONItem.storageKeys.push('0x' + (0, ethereumjs_util_1.setLengthLeft)(storageSlot, 32).toString('hex'));\n            }\n            accessListJSON.push(JSONItem);\n        }\n        return accessListJSON;\n    };\n    AccessLists.getDataFeeEIP2930 = function (accessList, common) {\n        var accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n        var accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n        var slots = 0;\n        for (var index = 0; index < accessList.length; index++) {\n            var item = accessList[index];\n            var storageSlots = item[1];\n            slots += storageSlots.length;\n        }\n        var addresses = accessList.length;\n        return addresses * accessListAddressCost + slots * accessListStorageKeyCost;\n    };\n    return AccessLists;\n}());\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=util.js.map","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return call(URL.prototype.toString, this);\n  }\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n    ['berlin', require('./berlin.json')],\n    ['london', require('./london.json')],\n    ['shanghai', require('./shanghai.json')],\n    ['arrowGlacier', require('./arrowGlacier.json')],\n    ['grayGlacier', require('./grayGlacier.json')],\n    ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n    ['merge', require('./merge.json')],\n];\n//# sourceMappingURL=index.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mew-module',{staticClass:\"d-flex flex-grow-1 pt-6\",attrs:{\"title\":\"Send\",\"has-elevation\":true,\"has-indicator\":true},scopedSlots:_vm._u([{key:\"moduleBody\",fn:function(){return [_c('v-row',{staticClass:\"mt-5\"},[_c('v-col',{staticClass:\"pr-sm-1 pt-0 pb-0 pb-sm-4\",attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('div',{staticClass:\"position--relative\"},[_c('app-button-balance',{staticClass:\"d-sm-none\",attrs:{\"balance\":_vm.selectedBalance,\"loading\":!_vm.showSelectedBalance}}),_c('mew-select',{ref:\"mewSelect\",attrs:{\"label\":\"Token\",\"items\":_vm.tokens,\"is-custom\":true,\"value\":_vm.selectedCurrency},on:{\"input\":_vm.setCurrency}})],1)]),_c('v-col',{staticClass:\"pl-sm-1 pt-0 pb-2 pb-sm-4\",attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('div',{staticClass:\"position--relative\"},[_c('app-button-balance',{staticClass:\"d-none d-sm-block\",attrs:{\"balance\":_vm.selectedBalance,\"loading\":!_vm.showSelectedBalance}}),_c('mew-input',{attrs:{\"label\":\"Amount\",\"placeholder\":\"0\",\"value\":_vm.amount,\"type\":\"number\",\"persistent-hint\":true,\"error-messages\":_vm.amountErrorMessage,\"max-btn-obj\":{\n              title: 'Max',\n              disabled: _vm.disableSwapBtn,\n              method: _vm.setEntireBal\n            },\"buy-more-str\":_vm.buyMoreStr},on:{\"buyMore\":_vm.openMoonpay,\"input\":function (val) { return _vm.setAmount(val, false); }}})],1)]),(_vm.showBalanceNotice)?_c('v-col',{staticClass:\"pt-0 pb-4\",attrs:{\"cols\":\"12\"}},[_c('send-low-balance-notice',{staticClass:\"pa-3\",attrs:{\"address\":_vm.address,\"currency-name\":_vm.currencyName}})],1):_vm._e(),_c('v-col',{staticClass:\"pt-4 pb-2\",attrs:{\"cols\":\"12\"}},[_c('module-address-book',{ref:\"addressInput\",on:{\"setAddress\":_vm.setAddress}})],1),_c('v-col',{staticClass:\"py-0 mb-8\",attrs:{\"cols\":\"12\"}},[_c('app-transaction-fee',{attrs:{\"show-fee\":_vm.showSelectedBalance,\"getting-fee\":!_vm.txFeeIsReady,\"error\":_vm.feeError,\"total-cost\":_vm.totalCost,\"tx-fee\":_vm.txFee,\"total-gas-limit\":_vm.gasLimit,\"message\":_vm.feeError,\"not-enough-eth\":!_vm.hasEnoughEth,\"from-eth\":_vm.isFromNetworkCurrency},on:{\"onLocalGasPrice\":_vm.handleLocalGasPrice}})],1),_c('v-col',{staticClass:\"py-4\",attrs:{\"cols\":\"12\"}},[_c('mew-expand-panel',{ref:\"expandPanel\",attrs:{\"panel-items\":_vm.expandPanel,\"idx-to-expand\":_vm.openedPanels},on:{\"toggled\":_vm.closeToggle},scopedSlots:_vm._u([{key:\"panelBody1\",fn:function(){return [_c('div',{staticClass:\"px-5\"},[_c('div',{staticClass:\"pa-5 warning greyPrimary--text border-radius--5px mb-8\"},[_c('div',{staticClass:\"d-flex font-weight-bold mb-2\"},[_c('v-icon',{staticClass:\"greyPrimary--text mew-body mr-1\"},[_vm._v(\" mdi-alert-outline\")]),_vm._v(\"For advanced users only \")],1),_c('div',[_vm._v(\" Please don’t edit these fields unless you are an expert user & know what you’re doing. Entering the wrong information could result in your transaction failing or getting stuck. \")])]),_c('div',{staticClass:\"d-flex align-center justify-end pb-3\"},[_c('div',{staticClass:\"mew-body greenPrimary--text cursor--pointer\",on:{\"click\":function($event){return _vm.setGasLimit(_vm.defaultGasLimit)}}},[_vm._v(\" Reset to default: \"+_vm._s(_vm.formattedDefaultGasLimit)+\" \")])]),_c('mew-input',{attrs:{\"value\":_vm.gasLimit,\"label\":_vm.$t('common.gas.limit'),\"placeholder\":\"\",\"error-messages\":_vm.gasLimitError,\"type\":\"number\"},on:{\"input\":_vm.setGasLimit}}),_c('mew-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isToken),expression:\"!isToken\"}],ref:\"dataInput\",staticClass:\"mb-8\",attrs:{\"label\":_vm.$t('sendTx.add-data'),\"placeholder\":\"0x...\",\"rules\":_vm.dataRules,\"error-messages\":_vm.dataInvalidHexMessage,\"hide-clear-btn\":_vm.data === '0x'},nativeOn:{\"keyup\":function($event){return _vm.verifyHexFormat.apply(null, arguments)},\"focusout\":function($event){return _vm.verifyHexFormat.apply(null, arguments)}},model:{value:(_vm.data),callback:function ($$v) {_vm.data=$$v},expression:\"data\"}})],1)]},proxy:true}])})],1)],1),_c('div',{staticClass:\"d-flex flex-column mt-12\"},[_c('div',{staticClass:\"text-center\"},[_c('mew-button',{attrs:{\"title\":\"Next\",\"has-full-width\":false,\"btn-size\":\"xlarge\",\"disabled\":_vm.isDisabledNextBtn},nativeOn:{\"click\":function($event){return _vm.send()}}})],1),_c('div',{staticClass:\"text-center mt-4\"},[_c('mew-button',{attrs:{\"title\":_vm.$t('common.clear-all'),\"has-full-width\":false,\"btn-size\":\"small\",\"btn-style\":\"transparent\"},nativeOn:{\"click\":function($event){return _vm.clear()}}})],1)])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <mew-module\n    class=\"d-flex flex-grow-1 pt-6\"\n    title=\"Send\"\n    :has-elevation=\"true\"\n    :has-indicator=\"true\"\n  >\n    <template #moduleBody>\n      <!--\n      =====================================================================================\n        Tokens / Amount to Swap / Token Balance\n      =====================================================================================\n      -->\n      <v-row class=\"mt-5\">\n        <v-col cols=\"12\" sm=\"6\" class=\"pr-sm-1 pt-0 pb-0 pb-sm-4\">\n          <div class=\"position--relative\">\n            <app-button-balance\n              :balance=\"selectedBalance\"\n              :loading=\"!showSelectedBalance\"\n              class=\"d-sm-none\"\n            />\n            <mew-select\n              ref=\"mewSelect\"\n              label=\"Token\"\n              :items=\"tokens\"\n              :is-custom=\"true\"\n              :value=\"selectedCurrency\"\n              @input=\"setCurrency\"\n            />\n          </div>\n        </v-col>\n        <v-col cols=\"12\" sm=\"6\" class=\"pl-sm-1 pt-0 pb-2 pb-sm-4\">\n          <div class=\"position--relative\">\n            <app-button-balance\n              :balance=\"selectedBalance\"\n              :loading=\"!showSelectedBalance\"\n              class=\"d-none d-sm-block\"\n            />\n            <mew-input\n              label=\"Amount\"\n              placeholder=\"0\"\n              :value=\"amount\"\n              type=\"number\"\n              :persistent-hint=\"true\"\n              :error-messages=\"amountErrorMessage\"\n              :max-btn-obj=\"{\n                title: 'Max',\n                disabled: disableSwapBtn,\n                method: setEntireBal\n              }\"\n              :buy-more-str=\"buyMoreStr\"\n              @buyMore=\"openMoonpay\"\n              @input=\"val => setAmount(val, false)\"\n            />\n          </div>\n        </v-col>\n        <!--\n        =====================================================================================\n          Low Balance Notice\n        =====================================================================================\n        -->\n        <v-col v-if=\"showBalanceNotice\" cols=\"12\" class=\"pt-0 pb-4\">\n          <send-low-balance-notice\n            :address=\"address\"\n            :currency-name=\"currencyName\"\n            class=\"pa-3\"\n          />\n        </v-col>\n        <!--\n        =====================================================================================\n          Input Address\n        =====================================================================================\n        -->\n        <v-col cols=\"12\" class=\"pt-4 pb-2\">\n          <module-address-book ref=\"addressInput\" @setAddress=\"setAddress\" />\n        </v-col>\n        <!--\n      =====================================================================================\n        Network Fee (Note: comes with mt-5(20px) mb-8(32px)))\n      =====================================================================================\n      -->\n        <v-col cols=\"12\" class=\"py-0 mb-8\">\n          <app-transaction-fee\n            :show-fee=\"showSelectedBalance\"\n            :getting-fee=\"!txFeeIsReady\"\n            :error=\"feeError\"\n            :total-cost=\"totalCost\"\n            :tx-fee=\"txFee\"\n            :total-gas-limit=\"gasLimit\"\n            :message=\"feeError\"\n            :not-enough-eth=\"!hasEnoughEth\"\n            :from-eth=\"isFromNetworkCurrency\"\n            @onLocalGasPrice=\"handleLocalGasPrice\"\n          />\n        </v-col>\n        <!--\n      =====================================================================================\n        Advanced:\n      =====================================================================================\n      -->\n        <v-col cols=\"12\" class=\"py-4\">\n          <mew-expand-panel\n            ref=\"expandPanel\"\n            :panel-items=\"expandPanel\"\n            :idx-to-expand=\"openedPanels\"\n            @toggled=\"closeToggle\"\n          >\n            <template #panelBody1>\n              <div class=\"px-5\">\n                <!-- Warning Sheet -->\n                <div\n                  class=\"pa-5 warning greyPrimary--text border-radius--5px mb-8\"\n                >\n                  <div class=\"d-flex font-weight-bold mb-2\">\n                    <v-icon class=\"greyPrimary--text mew-body mr-1\">\n                      mdi-alert-outline</v-icon\n                    >For advanced users only\n                  </div>\n                  <div>\n                    Please don’t edit these fields unless you are an expert user\n                    & know what you’re doing. Entering the wrong information\n                    could result in your transaction failing or getting stuck.\n                  </div>\n                </div>\n                <div class=\"d-flex align-center justify-end pb-3\">\n                  <div\n                    class=\"mew-body greenPrimary--text cursor--pointer\"\n                    @click=\"setGasLimit(defaultGasLimit)\"\n                  >\n                    Reset to default: {{ formattedDefaultGasLimit }}\n                  </div>\n                </div>\n\n                <mew-input\n                  :value=\"gasLimit\"\n                  :label=\"$t('common.gas.limit')\"\n                  placeholder=\"\"\n                  :error-messages=\"gasLimitError\"\n                  type=\"number\"\n                  @input=\"setGasLimit\"\n                />\n\n                <mew-input\n                  v-show=\"!isToken\"\n                  ref=\"dataInput\"\n                  v-model=\"data\"\n                  :label=\"$t('sendTx.add-data')\"\n                  placeholder=\"0x...\"\n                  :rules=\"dataRules\"\n                  :error-messages=\"dataInvalidHexMessage\"\n                  :hide-clear-btn=\"data === '0x'\"\n                  class=\"mb-8\"\n                  @keyup.native=\"verifyHexFormat\"\n                  @focusout.native=\"verifyHexFormat\"\n                />\n              </div>\n            </template>\n          </mew-expand-panel>\n        </v-col>\n      </v-row>\n\n      <div class=\"d-flex flex-column mt-12\">\n        <div class=\"text-center\">\n          <mew-button\n            title=\"Next\"\n            :has-full-width=\"false\"\n            btn-size=\"xlarge\"\n            :disabled=\"isDisabledNextBtn\"\n            @click.native=\"send()\"\n          />\n        </div>\n        <div class=\"text-center mt-4\">\n          <mew-button\n            :title=\"$t('common.clear-all')\"\n            :has-full-width=\"false\"\n            btn-size=\"small\"\n            btn-style=\"transparent\"\n            @click.native=\"clear()\"\n          />\n        </div>\n      </div>\n    </template>\n  </mew-module>\n</template>\n\n<script>\nimport { fromWei, isHexStrict } from 'web3-utils';\nimport { debounce, isEmpty, isNumber } from 'lodash';\nimport { mapGetters, mapState } from 'vuex';\nimport BigNumber from 'bignumber.js';\n\nimport { ETH } from '@/utils/networks/types';\nimport { Toast, ERROR, WARNING } from '@/modules/toast/handler/handlerToast';\n\nimport {\n  formatIntegerToString,\n  toBNSafe\n} from '@/core/helpers/numberFormatHelper';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport buyMore from '@/core/mixins/buyMore.mixin.js';\nimport { fromBase, toBase } from '@/core/helpers/unit';\n\nimport SendTransaction from '@/modules/send/handlers/handlerSend';\n\nexport default {\n  components: {\n    ModuleAddressBook: () => import('@/modules/address-book/ModuleAddressBook'),\n    SendLowBalanceNotice: () => import('./components/SendLowBalanceNotice.vue'),\n    AppButtonBalance: () => import('@/core/components/AppButtonBalance'),\n    AppTransactionFee: () => import('@/core/components/AppTransactionFee.vue')\n  },\n  mixins: [buyMore],\n  props: {\n    prefilledAmount: {\n      type: String,\n      default: '0'\n    },\n    prefilledData: {\n      type: String,\n      default: '0x'\n    },\n    prefilledAddress: {\n      type: String,\n      default: ''\n    },\n    prefilledGasLimit: {\n      type: String,\n      default: '21000'\n    }\n  },\n  data() {\n    return {\n      gasLimit: '21000',\n      toAddress: '',\n      sendTx: null,\n      isValidAddress: false,\n      amount: '0',\n      selectedCurrency: {},\n      data: '0x',\n      userInputType: '',\n      expandPanel: [\n        {\n          name: this.$t('common.advanced'),\n          toggleTitle: 'Gas Limit & Data'\n        }\n      ],\n      openedPanels: [],\n      defaultGasLimit: '21000',\n      gasLimitError: '',\n      amountError: '',\n      gasEstimationError: '',\n      gasEstimationIsReady: false,\n      localGasPrice: '0',\n      selectedMax: false\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'instance']),\n    ...mapState('global', ['preferredCurrency']),\n    ...mapGetters('global', [\n      'network',\n      'gasPrice',\n      'isEthNetwork',\n      'swapLink',\n      'getFiatValue'\n    ]),\n    ...mapGetters('wallet', ['balanceInETH', 'tokensList']),\n    ...mapGetters('custom', ['hasCustom', 'customTokens', 'hiddenTokens']),\n    isFromNetworkCurrency() {\n      return this.selectedCurrency?.symbol === this.currencyName;\n    },\n    isDisabledNextBtn() {\n      return (\n        this.feeError !== '' ||\n        !this.isValidGasLimit ||\n        !this.allValidInputs ||\n        !this.gasEstimationIsReady ||\n        !isHexStrict(this.data)\n      );\n    },\n    buyMoreStr() {\n      return this.isEthNetwork &&\n        MAIN_TOKEN_ADDRESS === this.selectedCurrency?.contract &&\n        this.amountError === 'Not enough balance to send!'\n        ? this.network.type.canBuy\n          ? 'Buy more.'\n          : ''\n        : '';\n    },\n    hasEnoughEth() {\n      // Check whether user has enough eth to cover tx fee + amount to send\n      if (this.selectedCurrency?.contract === MAIN_TOKEN_ADDRESS) {\n        return BigNumber(this.amount)\n          .plus(this.txFeeETH)\n          .lte(this.balanceInETH);\n      }\n      // Check whether user has enough eth to cover tx fee + user has enough token balance for the amount to send\n      return BigNumber(this.balanceInETH).gte(this.txFeeETH);\n    },\n    feeError() {\n      return !this.hasEnoughEth\n        ? `Not enough ${this.currencyName} to cover network fee.`\n        : '';\n    },\n    showSelectedBalance() {\n      return (\n        !isEmpty(this.selectedCurrency) &&\n        this.selectedCurrency.text !== 'Select Token'\n      );\n    },\n    currencyName() {\n      return this.network.type.currencyName;\n    },\n    showBalanceNotice() {\n      const isZero = BigNumber(this.balanceInETH).lte(0);\n      const isLessThanTxFee =\n        BigNumber(this.balanceInETH).gt(0) &&\n        BigNumber(this.txFeeETH).gt(this.balanceInETH);\n\n      if (isZero || isLessThanTxFee) {\n        return true;\n      }\n\n      return false;\n    },\n    selectedBalance() {\n      if (this.selectedCurrency?.balance) {\n        const balance = this.convertToDisplay(\n          this.selectedCurrency.balance,\n          this.selectedCurrency.decimals\n        );\n        return BigNumber(balance).toString();\n      }\n      return '0';\n    },\n    /**\n     * Gets tokens from token list\n     * Formats each token to be used in mew-select\n     */\n    tokens() {\n      // no ref copy\n      const tokensList = this.tokensList.slice().filter(t => {\n        return !t.isHidden;\n      });\n      const customTokens = this.customTokens.reduce((arr, item) => {\n        // Check if token is in hiddenTokens\n        const isHidden = this.hiddenTokens.find(token => {\n          return item.contract == token.address;\n        });\n        item.decimals = BigNumber(item.decimals).toNumber();\n        if (!isHidden) arr.push(item);\n        return arr;\n      }, []);\n      const imgs = tokensList.map(item => {\n        item.totalBalance = this.getFiatValue(item.usdBalancef);\n        item.tokenBalance = item.balancef;\n        item.price = this.getFiatValue(item.pricef);\n        item.subtext = item.name;\n        item.value = item.contract;\n        item.name = item.symbol;\n        return item.img;\n      });\n      BigNumber(this.balanceInETH).lte(0)\n        ? tokensList.unshift({\n            hasNoEth: true,\n            disabled: true,\n            text: 'Your wallet is empty.',\n            linkText: this.isEthNetwork ? 'Buy ETH' : '',\n            link: this.isEthNetwork ? this.swapLink : ''\n          })\n        : null;\n      const returnedArray = [\n        {\n          text: 'Select Token',\n          imgs: imgs.splice(0, 5),\n          total: `${this.tokensList.length}`,\n          divider: true,\n          selectLabel: true\n        },\n        {\n          header: 'My Wallet'\n        },\n        ...tokensList\n      ];\n      if (customTokens.length > 0) {\n        return returnedArray.concat([\n          {\n            header: 'Custom Tokens'\n          },\n          ...customTokens\n        ]);\n      }\n      return returnedArray;\n    },\n    /* Property returns either gas estimmation error or amount error*/\n    amountErrorMessage() {\n      return this.gasEstimationError !== '' && this.sendTx?.hasEnoughBalance()\n        ? this.gasEstimationError\n        : this.amountError;\n    },\n    /**\n     * Property checks if user input valid amount\n     * Results to false if amount is empty, amount is negative, has invalid decimal points\n     * @returns {boolean} true or false based on above params\n     */\n    isValidAmount() {\n      /** !amount */\n      if (!this.amount) {\n        return false;\n      }\n      if (!isNumber(this.selectedCurrency?.decimals)) {\n        return false;\n      }\n      /** amount is negative */\n      if (BigNumber(this.amount).lt(0)) {\n        return false;\n      }\n      /** return amount has valid decimals */\n      return SendTransaction.helpers.hasValidDecimals(\n        this.amount,\n        this.selectedCurrency.decimals\n      );\n    },\n    isValidGasLimit() {\n      if (this.gasLimit) {\n        return (\n          BigNumber(this.gasLimit).gt(0) &&\n          BigNumber(this.gasLimit).dp() < 1 &&\n          toBNSafe(this.gasLimit).gte(toBNSafe(this.defaultGasLimit))\n        );\n      }\n      return false;\n    },\n    dataRules() {\n      return [\n        value => {\n          return isHexStrict(value);\n        }\n      ];\n    },\n    dataInvalidHexMessage() {\n      if (this.data === '') {\n        return 'Data cannot be empty!';\n      }\n      if (isHexStrict(this.data)) {\n        return '';\n      }\n      return 'Invalid hex data';\n    },\n    isEthNetwork() {\n      return this.network.type.name === ETH.name;\n    },\n    isToken() {\n      if (this.sendTx && this.selectedCurrency?.contract)\n        return this.sendTx.isToken();\n      return false;\n    },\n    multiwatch() {\n      return (\n        this.amount,\n        this.isValidAddress,\n        this.data,\n        this.selectedCurrency,\n        new Date().getTime() / 1000\n      );\n    },\n    txFeeETH() {\n      return fromWei(this.txFee);\n    },\n    currencyDecimals() {\n      return this.selectedCurrency?.decimals\n        ? this.selectedCurrency.decimals\n        : 18;\n    },\n    totalCost() {\n      if (\n        !SendTransaction.helpers.hasValidDecimals(\n          this.amount,\n          this.selectedCurrency?.decimals\n        )\n      )\n        return '0';\n      const amountToWei = toBase(this.amount, this.currencyDecimals);\n      return this.isFromNetworkCurrency\n        ? BigNumber(this.txFee).plus(amountToWei).toString()\n        : this.txFee;\n    },\n    txFee() {\n      if (this.isValidGasLimit) {\n        return this.actualGasPrice.mul(toBNSafe(this.gasLimit)).toString();\n      }\n      return '0';\n    },\n    /**\n     * Computed property determines whether or not show the loading state of the fee\n     * Fee is loaded when: invalid amount, invalid gas limit\n     * @return {boolean} true of false based on the above params\n     */\n    txFeeIsReady() {\n      return this.isValidAmount && this.isValidGasLimit;\n    },\n    getCalculatedAmount() {\n      return toBase(this.amount ? this.amount : 0, this.currencyDecimals);\n    },\n    allValidInputs() {\n      if (this.sendTx && this.sendTx.currency) {\n        return (\n          this.isValidAmount &&\n          this.sendTx.hasEnoughBalance() &&\n          this.isValidAddress\n        );\n      }\n      return false;\n    },\n    actualGasPrice() {\n      if (toBNSafe(this.localGasPrice).eqn(0)) {\n        return toBNSafe(this.gasPrice);\n      }\n      return toBNSafe(this.localGasPrice);\n    },\n    formattedDefaultGasLimit() {\n      return formatIntegerToString(this.defaultGasLimit);\n    },\n    disableSwapBtn() {\n      if (!isEmpty(this.sendTx) && !isEmpty(this.selectedCurrency)) {\n        return !this.sendTx.hasEnoughBalance();\n      }\n      return true;\n    },\n    isValidForGas() {\n      return (\n        this.sendTx &&\n        this.sendTx.currency &&\n        this.isValidAmount &&\n        this.isValidAddress\n      );\n    }\n  },\n  watch: {\n    multiwatch() {\n      if (this.allValidInputs) {\n        this.debounceEstimateGas();\n      }\n    },\n    isPrefilled() {\n      this.prefillForm();\n    },\n    tokensList: {\n      handler: function (val) {\n        this.selectedCurrency = val.length > 0 ? val[0] : {};\n        if (this.sendTx) {\n          this.sendTx.setCurrency(this.selectedCurrency);\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    toAddress() {\n      if (this.isValidAddress) {\n        this.sendTx.setTo(this.toAddress, this.userInputType);\n      }\n    },\n    amount(newVal) {\n      // make sure amount never becomes null\n      if (!newVal) this.amount = '0';\n      if (this.isValidAmount) {\n        this.sendTx.setValue(this.getCalculatedAmount);\n      }\n      this.amountError = '';\n      this.debounceAmountError(newVal);\n    },\n    selectedCurrency: {\n      handler: function (newVal) {\n        if (this.sendTx) {\n          this.sendTx.setCurrency(newVal);\n          if (this.isValidForGas) this.debounceEstimateGas();\n          this.debounceAmountError(this.amount);\n          this.gasLimit = this.defaultGasLimit;\n        }\n        this.data = '0x';\n      },\n      immediate: true,\n      deep: true\n    },\n    data() {\n      if (!this.data) this.data = '0x';\n      if (isHexStrict(this.data)) this.sendTx.setData(this.data);\n    },\n    gasLimit(newVal) {\n      if (this.isValidGasLimit) {\n        this.sendTx.setGasLimit(this.gasLimit);\n      }\n      this.gasLimitError = '';\n      this.debouncedGasLimitError(newVal);\n    },\n    network() {\n      this.clear();\n    },\n    address() {\n      this.clear();\n      this.debounceAmountError('0');\n    },\n    txFeeETH(newVal) {\n      if (!isEmpty(this.selectedCurrency)) this.localGasPriceWatcher(newVal);\n    }\n  },\n  mounted() {\n    this.setSendTransaction();\n    this.gasLimit = this.prefilledGasLimit;\n    this.selectedCurrency = this.tokensList[0];\n    this.sendTx.setCurrency(this.selectedCurrency);\n    this.sendTx.setLocalGasPrice(this.actualGasPrice);\n  },\n  created() {\n    this.debouncedGasLimitError = debounce(value => {\n      this.setGasLimitError(value);\n    }, 1000);\n    this.debounceAmountError = debounce(value => {\n      this.setAmountError(value);\n    }, 1000);\n    this.debounceEstimateGas = debounce(() => {\n      if (this.isValidForGas) {\n        this.estimateAndSetGas();\n      }\n    }, 500);\n  },\n  methods: {\n    localGasPriceWatcher(newVal) {\n      const total = BigNumber(newVal).plus(this.amount);\n      const amt = toBase(this.amount, this.selectedCurrency?.decimals);\n      const balance = toBNSafe(this.selectedCurrency.balance);\n\n      if (\n        (this.selectedMax &&\n          this.selectedCurrency &&\n          this.selectedCurrency.contract === MAIN_TOKEN_ADDRESS &&\n          total.gt(this.balanceInETH)) ||\n        (this.selectedCurrency &&\n          this.selectedCurrency.contract !== MAIN_TOKEN_ADDRESS &&\n          balance.lt(amt))\n      ) {\n        this.setEntireBal();\n      }\n    },\n    verifyHexFormat() {\n      this.$refs.dataInput._data.inputValue = this.data;\n      if (!this.data || isEmpty(this.data)) {\n        this.data = '0x';\n        this.$refs.dataInput._data.inputValue = '0x';\n      }\n    },\n    /**\n     * Resets values to default\n     */\n    clear() {\n      if (this.$refs && this.$refs.addressInput)\n        this.$refs.addressInput.clear();\n      this.toAddress = '';\n      this.selectedCurrency = this.tokensList[0];\n      this.sendTx = null;\n      this.isValidAddress = false;\n      this.amount = '0';\n      this.data = '0x';\n      this.userInputType = '';\n      this.defaultGasLimit = '21000';\n      this.gasLimitError = '';\n      this.amountError = '';\n      this.gasEstimationError = '';\n      this.gasEstimationIsReady = false;\n      this.localGasPrice = '0';\n\n      // resets the defaults on mount\n      this.setSendTransaction();\n      this.gasLimit = this.prefilledGasLimit;\n      this.sendTx.setCurrency(this.selectedCurrency);\n      this.handleLocalGasPrice(this.gasPrice);\n    },\n    /**\n     * Method sets gas limit to default when Advanced closed , ONLY IF gasLimit was invalid\n     */\n    closeToggle() {\n      if (!this.isValidGasLimit) {\n        this.gasLimit = this.defaultGasLimit;\n        this.setGasLimitError(this.gasLimit);\n      }\n    },\n    /**\n     * Method sets amountError based on the user input\n     * Has to be set manualy and debouned otherwise error message is not displayed when tokens are switched and amount input component is out of focus\n     * @param value {string}\n     */\n    setAmountError(value) {\n      if (value) {\n        if (BigNumber(value).lt(0)) {\n          this.amountError = \"Amount can't be negative!\";\n        } else if (\n          this.selectedCurrency?.decimals &&\n          !SendTransaction.helpers.hasValidDecimals(\n            value,\n            this.selectedCurrency.decimals\n          )\n        ) {\n          this.amountError = 'Invalid decimal points';\n        } else if (this.sendTx && this.sendTx.currency) {\n          this.amountError = this.sendTx.hasEnoughBalance()\n            ? ''\n            : 'Not enough balance to send!';\n        } else {\n          this.amountError = '';\n        }\n      } else {\n        this.amountError = 'Required';\n      }\n    },\n    /**\n     * Method sets gasLimitError based on the user input\n     * Has to be set manualy and debouned otherwise error message is not displayed when tokens are switched and gas limit input component is out of focus\n     * @param value {string}\n     */\n    setGasLimitError(value) {\n      if (value) {\n        if (BigNumber(value).lte(0))\n          this.gasLimitError = 'Gas limit must be greater than 0';\n        else if (BigNumber(value).dp() > 0)\n          this.gasLimitError = 'Gas limit can not have decimal points';\n        else if (toBNSafe(value).lt(toBNSafe(this.defaultGasLimit)))\n          this.gasLimitError = 'Amount too low. Transaction will fail';\n        else {\n          this.gasLimitError = '';\n        }\n      } else {\n        this.gasLimitError = 'Required';\n      }\n    },\n    setAddress(addr, isValidAddress, userInputType) {\n      this.toAddress = addr;\n      this.isValidAddress = isValidAddress;\n      this.userInputType = userInputType;\n    },\n    setSendTransaction() {\n      this.localGasPrice = this.gasPrice;\n      this.sendTx = new SendTransaction();\n    },\n    estimateAndSetGas() {\n      this.gasEstimationIsReady = false;\n      this.sendTx\n        .estimateGas()\n        .then(res => {\n          this.gasLimit = toBNSafe(res).toString();\n          this.defaultGasLimit = toBNSafe(res).toString();\n          this.setGasLimitError(this.gasLimit);\n          this.sendTx.setGasLimit(res);\n          this.gasEstimationError = '';\n          this.gasEstimationIsReady = true;\n        })\n        .catch(e => {\n          this.gasEstimationError = e.message;\n          this.gasEstimationIsReady = false;\n        });\n    },\n    send() {\n      window.scrollTo(0, 0);\n      this.sendTx\n        .submitTransaction()\n        .then(() => {\n          this.clear();\n        })\n        .catch(error => {\n          this.clear();\n          if (!this.instance) {\n            Toast(error, {}, ERROR);\n          }\n        });\n    },\n    prefillForm() {\n      if (this.isPrefilled) {\n        const foundToken = this.tokensymbol\n          ? this.tokensList.find(item => {\n              return item.name.toLowerCase() === this.tokenSymbol.toLowerCase();\n            })\n          : undefined;\n        this.data = isHexStrict(this.prefilledData) ? this.prefilledData : '0x';\n        this.amount = this.prefilledAmount;\n        this.toAddress = this.prefilledAddress;\n        this.gasLimit = this.prefilledGasLimit;\n        this.selectedCurrency = foundToken ? foundToken : this.selectedCurrency;\n        this.$refs.expandPanel.setToggle(true);\n        Toast(this.$t('sendTx.prefilled-warning'), {}, WARNING, 1000);\n        this.clearPrefilled();\n      }\n    },\n    convertToDisplay(amount, decimals) {\n      const amt = toBNSafe(amount).toString();\n      return decimals ? fromBase(amt, decimals).toString() : amt;\n    },\n    setEntireBal() {\n      if (\n        isEmpty(this.selectedCurrency) ||\n        this.selectedCurrency.contract === MAIN_TOKEN_ADDRESS\n      ) {\n        const amt = BigNumber(this.balanceInETH).minus(this.txFeeETH);\n        this.setAmount(amt.lt(0) ? '0' : amt.toFixed(), true);\n      } else {\n        this.setAmount(\n          this.convertToDisplay(\n            this.selectedCurrency.balance,\n            this.selectedCurrency.decimals\n          ),\n          true\n        );\n      }\n    },\n    setAmount(value, max) {\n      this.amount = value;\n      this.selectedMax = max;\n    },\n    setGasLimit(value) {\n      this.gasLimit = value;\n    },\n    setCurrency(value) {\n      this.selectedCurrency = value;\n      this.amount = '0';\n    },\n    handleLocalGasPrice(e) {\n      this.localGasPrice = e;\n      this.sendTx.setLocalGasPrice(e);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.border-bottom {\n  border-bottom: 2px dotted #f5f5f5;\n}\n\n.balance-container {\n  top: -15px;\n  position: absolute;\n  right: 15px;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSend.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSend.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleSend.vue?vue&type=template&id=516d872e&scoped=true&\"\nimport script from \"./ModuleSend.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleSend.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModuleSend.vue?vue&type=style&index=0&id=516d872e&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"516d872e\",\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FeeMarketEIP1559Transaction = exports.TransactionFactory = exports.AccessListEIP2930Transaction = exports.Transaction = void 0;\nvar legacyTransaction_1 = require(\"./legacyTransaction\");\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return __importDefault(legacyTransaction_1).default; } });\nvar eip2930Transaction_1 = require(\"./eip2930Transaction\");\nObject.defineProperty(exports, \"AccessListEIP2930Transaction\", { enumerable: true, get: function () { return __importDefault(eip2930Transaction_1).default; } });\nvar transactionFactory_1 = require(\"./transactionFactory\");\nObject.defineProperty(exports, \"TransactionFactory\", { enumerable: true, get: function () { return __importDefault(transactionFactory_1).default; } });\nvar eip1559Transaction_1 = require(\"./eip1559Transaction\");\nObject.defineProperty(exports, \"FeeMarketEIP1559Transaction\", { enumerable: true, get: function () { return __importDefault(eip1559Transaction_1).default; } });\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","import web3 from 'web3';\n\nconst isAddress = address => {\n  return (\n    address && web3.utils.isHexStrict(address) && web3.utils.isAddress(address)\n  );\n};\nconst toChecksumAddress = address => {\n  return web3.utils.toChecksumAddress(address);\n};\nexport { isAddress, toChecksumAddress };\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleSend.vue?vue&type=style&index=0&id=516d872e&prod&lang=scss&scoped=true&\"","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIPs = void 0;\nexports.EIPs = {\n    1153: require('./1153.json'),\n    1559: require('./1559.json'),\n    2315: require('./2315.json'),\n    2537: require('./2537.json'),\n    2565: require('./2565.json'),\n    2718: require('./2718.json'),\n    2929: require('./2929.json'),\n    2930: require('./2930.json'),\n    3198: require('./3198.json'),\n    3529: require('./3529.json'),\n    3540: require('./3540.json'),\n    3541: require('./3541.json'),\n    3554: require('./3554.json'),\n    3607: require('./3607.json'),\n    3651: require('./3651.json'),\n    3670: require('./3670.json'),\n    3675: require('./3675.json'),\n    3855: require('./3855.json'),\n    3860: require('./3860.json'),\n    4345: require('./4345.json'),\n    4399: require('./4399.json'),\n    5133: require('./5133.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar _1 = require(\".\");\nvar TransactionFactory = /** @class */ (function () {\n    // It is not possible to instantiate a TransactionFactory object.\n    function TransactionFactory() {\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    TransactionFactory.fromTxData = function (txData, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _1.Transaction.fromTxData(txData, txOptions);\n        }\n        else {\n            var txType = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.type)).toNumber();\n            if (txType === 0) {\n                return _1.Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 1) {\n                return _1.AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 2) {\n                return _1.FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(\"Tx instantiation with type \".concat(txType, \" not supported\"));\n            }\n        }\n    };\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Buffer\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromSerializedData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            var EIP = void 0;\n            switch (data[0]) {\n                case 1:\n                    EIP = 2930;\n                    break;\n                case 2:\n                    EIP = 1559;\n                    break;\n                default:\n                    throw new Error(\"TypedTransaction with ID \".concat(data[0], \" unknown\"));\n            }\n            if (EIP === 1559) {\n                return _1.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n            }\n            else {\n                // EIP === 2930\n                return _1.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n            }\n        }\n        else {\n            return _1.Transaction.fromSerializedTx(data, txOptions);\n        }\n    };\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Buffer[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Buffer or Buffer[]\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromBlockBodyData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (Buffer.isBuffer(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _1.Transaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    };\n    /**\n     * This helper method allows one to retrieve the class which matches the transactionID\n     * If transactionID is undefined, returns the legacy transaction class.\n     * @deprecated - This method is deprecated and will be removed on the next major release\n     * @param transactionID\n     * @param _common - This option is not used\n     */\n    TransactionFactory.getTransactionClass = function (transactionID, _common) {\n        if (transactionID === void 0) { transactionID = 0; }\n        var legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff);\n        if (legacyTxn) {\n            return _1.Transaction;\n        }\n        switch (transactionID) {\n            case 1:\n                return _1.AccessListEIP2930Transaction;\n            case 2:\n                return _1.FeeMarketEIP1559Transaction;\n            default:\n                throw new Error(\"TypedTransaction with ID \".concat(transactionID, \" unknown\"));\n        }\n    };\n    return TransactionFactory;\n}());\nexports.default = TransactionFactory;\n//# sourceMappingURL=transactionFactory.js.map"],"sourceRoot":""}