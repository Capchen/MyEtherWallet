{"version":3,"sources":["webpack:///./src/modules/moon-pay/components/MoonPaySellComponent.vue?1d09","webpack:///src/modules/moon-pay/components/MoonPaySellComponent.vue","webpack:///./src/modules/moon-pay/components/MoonPaySellComponent.vue?9906","webpack:///./src/modules/moon-pay/components/MoonPaySellComponent.vue","webpack:///./src/apollo/queries/wallets/wallets.graphql","webpack:///./src/core/mixins/handlerWallet.mixin.js","webpack:///./src/modules/send/errors.js","webpack:///./src/modules/send/handlers/handlerSend.js","webpack:///./node_modules/core-js/modules/web.url.to-json.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","attrs","currencyItems","selectedCurrency","loading","on","setCurrency","selectedBalance","fetchingBalance","maxButton","errorMessages","hasPersistentHint","persistentHintMessage","nativeOn","$event","preventCharE","model","value","callback","$$v","amount","expression","_v","estimatingFees","_s","txFeeInEth","_e","inWallet","setAddress","disableSell","isValidToAddress","sell","apply","arguments","staticRenderFns","name","components","ButtonBalance","ModuleAddressBook","mixins","props","orderHandler","type","default","close","defaultCurrency","data","fetchedData","locGasPrice","sendHandler","gasLimit","maxBalance","toAddress","validToAddress","computed","mapState","mapGetters","title","method","disabled","BigNumber","preselectedCurrencies","inList","arr","token","sellContracts","item","text","imgs","total","divider","selectLabel","tokensList","min","max","txFee","nonMainnetMetamask","isValidAmount","getCalculatedAmount","times","toFixed","getAmountBN","hasEnoughAssets","Toast","actualAddress","actualValidAddress","watch","handler","deep","gasPriceType","mounted","selectedCurrencyRef","methods","mapActions","getEthBalance","web3Instance","getTokenBalance","abi","contract","balanceOf","call","then","div","toString","debouncedSetAmount","newVal","estimateGas","catch","setMax","fetchSellInfo","getSupportedFiatToSell","component","doc","loc","source","collectFragmentReferences","node","refs","kind","add","selectionSet","selections","forEach","selection","variableDefinitions","def","definitions","definitionRefs","findOperation","i","length","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","refName","size","prevRefs","has","childRefs","childRef","op","push","module","exports","getLatestPrices","tokensData","apollo","query","pollInterval","result","Map","set","id","setCoinGeckoTokens","error","message","ERROR","INVALID_TO_ADDRESS","INVALID_FROM_ADDRESS","INVALID_DATA_HEX","NEGATIVE_VALUE","SendTransaction","$store","vuexStore","Object","assign","currency","localGasPrice","TX","from","to","destination","nonce","gasPrice","gas","destinationValue","_to","_type","isAddress","ErrorList","toDetails","isToken","toChecksumAddress","_from","toHex","toBN","_gasLimit","_value","isNaN","isNull","_valueBN","lt","setData","getTokenTransferABI","_data","isHexStrict","SanitizeHex","_nonce","_currency","balance","gasPriceBN","fee","mul","gt","sub","address","setFrom","_setTo","_setValue","_setGasPrice","web3","eth","MAIN_TOKEN_ADDRESS","hasAmountToken","lte","toBNSafe","hasGas","_toAddress","jsonInterface","constant","inputs","outputs","payable","stateMutability","Web3Contract","transfer","toLowerCase","encodeABI","getTransactionCount","setNonce","_tx","Transaction","fromTxData","json","toJSON","sendTransaction","helpers","hasValidDecimals","$","target","proto","enumerable","URL","prototype"],"mappings":"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UAEArC,gBACA,4CACA,uCACA,sCACA,MACA,8BAEAN,uBACA,OACA,aACA,kBACA+B,wBACA,cACA,0BACA,yBAGAa,eAAA,WACA,4CACA,gDACA,qDAGA,KACA,wBAGA,kBAEAC,eAAA,WACA,4CACA,gDACA,qDAGA,KACA,wBAGA,eAEAC,iBACA,4BACAf,wDAGAnC,sBACA,0DAEAf,yBAAA,MACA,yDACA,UACA,+BACA,mBACA,2BACA,wEAGA,sBACA,wBAGA,WACA,kCAGA,2BACA,qFAEA,2BACA,qFAGA,kBACA,8BACA,sDAEA,IACA,yCACA,oCAEA,gEAIA,GACA,yBACA,qBACA,qBAEA,kFAGA,OACA,cACA,gCACA,YACA,gCAGA,kGAGA,IAEAkE,8BAAA,MACA,OACA,eACA,+CACA,kEAGAC,yBAAA,MAEA,wBAGA,yFAIA,wBAIA,gCACA,YACA,mCAGAC,+BACA,yCACAC,uDACAC,WACA,0BAEAC,uBAEA,gDACA,qBACA,0BACA,gCAEA,0BAEAC,2BACA,IACA,qBACA,qBACA,gCAEA,+CACA,SAEA,OADAC,6BACA,IAGAC,yBACA,kDAEAC,8BACA,8CAGAC,OACAnF,kBACAoF,oBACA,oBACA,0BACA,0BAEA,wCACA,8CAEA,gCAEA,sBAEAC,SAEApE,mBACA,4BAEAqE,yBACA,yCAEAzC,wBACA,sCAEAE,qBACA,iCAEAT,cACA8C,mBACA,4BACA,qBACA,yDAEAC,UAGAE,mBAEA,kCACA,4BACA,aACA,WACA,qBAEA,YAEA,GAEAC,eACAA,2BAEAA,gBAKA,mEACA,4BACA,qBACA,yDAEAC,yCACAC,uDACAjE,2BACA,2CAEA,iBADA,uBAEA,sBACA,sBACA,yCACA,uBAEAkE,yBAAA,WACA,4BACA,iCACAC,uDACA,qBACA,+CAGAC,2BAAA,WACA,4BACA,iCACA,qBACAC,OACA,gCAEAC,UACAC,8BACAC,OACAC,kBACA,qBACA,yBACAC,8CACAC,gBAGAC,sDAAA,WAKA,GAJA,6BACA,4BAGA,cAIAC,IACA,wCACA,oBACA,cACA,OACA,YACA1B,MACAnB,YACA,yDACA,+BACA,K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","file":"js/chunk-b432ca66.57aba426.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pt-10 px-8\"},[_c('mew-select',{ref:\"selectedCurrency\",attrs:{\"label\":\"Currency\",\"items\":_vm.currencyItems,\"value\":_vm.selectedCurrency,\"disabled\":_vm.loading,\"is-custom\":\"\"},on:{\"input\":_vm.setCurrency}}),(_vm.inWallet)?_c('div',{staticClass:\"position--relative mt-9\"},[_c('button-balance',{attrs:{\"balance\":_vm.selectedBalance,\"loading\":_vm.fetchingBalance}}),_c('mew-input',{attrs:{\"type\":\"number\",\"label\":\"Amount\",\"placeholder\":\"Enter amount to sell\",\"max-btn-obj\":_vm.maxButton,\"disabled\":_vm.loading,\"error-messages\":_vm.errorMessages,\"persistent-hint\":_vm.hasPersistentHint,\"hint\":_vm.persistentHintMessage},nativeOn:{\"keydown\":function($event){return _vm.preventCharE($event)}},model:{value:(_vm.amount),callback:function ($$v) {_vm.amount=$$v},expression:\"amount\"}})],1):_c('div',{staticClass:\"position--relative mt-9\"},[_c('mew-input',{attrs:{\"type\":\"number\",\"label\":\"Amount\",\"placeholder\":\"Enter amount to sell\",\"disabled\":_vm.loading,\"error-messages\":_vm.errorMessages,\"persistent-hint\":_vm.hasPersistentHint,\"hint\":_vm.persistentHintMessage},nativeOn:{\"keydown\":function($event){return _vm.preventCharE($event)}},model:{value:(_vm.amount),callback:function ($$v) {_vm.amount=$$v},expression:\"amount\"}})],1),_c('div',{staticClass:\"pt-8 pb-13\"},[(_vm.inWallet)?_c('div',{staticClass:\"d-flex align-center justify-space-between mb-2\"},[_c('div',{staticClass:\"mew-body textDark--text font-weight-bold\"},[_vm._v(\" Estimated Network Fee \")]),(!_vm.estimatingFees)?_c('div',{staticClass:\"mew-body textDark--text\"},[_vm._v(\" ~\"+_vm._s(_vm.txFeeInEth)+\" \")]):_c('v-skeleton-loader',{attrs:{\"type\":\"text\",\"width\":\"150px\"}})],1):_vm._e(),_c('div',{staticClass:\"mew-body textMedium--text\"},[_vm._v(\" After submitting your sell order, you will have to send your crypto to Moonpay. Remember to have enough ETH for the Send Network Fee. \")])]),(!_vm.inWallet)?_c('div',{staticClass:\"mt-0\"},[_c('div',{staticClass:\"mew-heading-3 textDark--text mb-5\"},[_vm._v(\"Refund address\")]),_c('module-address-book',{ref:\"addressInput\",attrs:{\"label\":\"Enter Crypto Address\",\"enable-save-address\":false,\"is-home-page\":true},on:{\"setAddress\":_vm.setAddress}})],1):_vm._e(),_c('mew-button',{staticClass:\"mb-6\",attrs:{\"title\":\"SELL WITH MOONPAY\",\"btn-size\":\"xlarge\",\"has-full-width\":\"\",\"disabled\":_vm.disableSell,\"is-valid-address-func\":_vm.isValidToAddress},nativeOn:{\"click\":function($event){return _vm.sell.apply(null, arguments)}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"pt-10 px-8\">\n    <!-- ============================================================== -->\n    <!-- Currency select -->\n    <!-- ============================================================== -->\n    <mew-select\n      ref=\"selectedCurrency\"\n      label=\"Currency\"\n      :items=\"currencyItems\"\n      :value=\"selectedCurrency\"\n      :disabled=\"loading\"\n      is-custom\n      @input=\"setCurrency\"\n    />\n\n    <!-- ============================================================== -->\n    <!-- Amount -->\n    <!-- ============================================================== -->\n    <div v-if=\"inWallet\" class=\"position--relative mt-9\">\n      <button-balance :balance=\"selectedBalance\" :loading=\"fetchingBalance\" />\n      <mew-input\n        v-model=\"amount\"\n        type=\"number\"\n        label=\"Amount\"\n        placeholder=\"Enter amount to sell\"\n        :max-btn-obj=\"maxButton\"\n        :disabled=\"loading\"\n        :error-messages=\"errorMessages\"\n        :persistent-hint=\"hasPersistentHint\"\n        :hint=\"persistentHintMessage\"\n        @keydown.native=\"preventCharE($event)\"\n      />\n    </div>\n    <div v-else class=\"position--relative mt-9\">\n      <mew-input\n        v-model=\"amount\"\n        type=\"number\"\n        label=\"Amount\"\n        placeholder=\"Enter amount to sell\"\n        :disabled=\"loading\"\n        :error-messages=\"errorMessages\"\n        :persistent-hint=\"hasPersistentHint\"\n        :hint=\"persistentHintMessage\"\n        @keydown.native=\"preventCharE($event)\"\n      />\n    </div>\n    <div class=\"pt-8 pb-13\">\n      <div\n        v-if=\"inWallet\"\n        class=\"d-flex align-center justify-space-between mb-2\"\n      >\n        <div class=\"mew-body textDark--text font-weight-bold\">\n          Estimated Network Fee\n        </div>\n        <div v-if=\"!estimatingFees\" class=\"mew-body textDark--text\">\n          ~{{ txFeeInEth }}\n        </div>\n        <v-skeleton-loader v-else type=\"text\" width=\"150px\" />\n      </div>\n      <div class=\"mew-body textMedium--text\">\n        After submitting your sell order, you will have to send your crypto to\n        Moonpay. Remember to have enough ETH for the Send Network Fee.\n      </div>\n    </div>\n    <!-- ============================================================== -->\n    <!-- Refund address -->\n    <!-- ============================================================== -->\n    <div v-if=\"!inWallet\" class=\"mt-0\">\n      <div class=\"mew-heading-3 textDark--text mb-5\">Refund address</div>\n      <module-address-book\n        ref=\"addressInput\"\n        label=\"Enter Crypto Address\"\n        :enable-save-address=\"false\"\n        :is-home-page=\"true\"\n        @setAddress=\"setAddress\"\n      />\n    </div>\n    <!-- ============================================================== -->\n    <!-- Sell button -->\n    <!-- ============================================================== -->\n    <mew-button\n      class=\"mb-6\"\n      title=\"SELL WITH MOONPAY\"\n      btn-size=\"xlarge\"\n      has-full-width\n      :disabled=\"disableSell\"\n      :is-valid-address-func=\"isValidToAddress\"\n      @click.native=\"sell\"\n    />\n  </div>\n</template>\n\n<script>\nimport MultiCoinValidator from 'multicoin-address-validator';\nimport { mapActions, mapGetters, mapState } from 'vuex';\nimport { isEmpty, debounce, isNumber } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { fromWei } from 'web3-utils';\nimport Web3 from 'web3';\n\nimport WALLET_TYPES from '@/modules/access-wallet/common/walletTypes';\nimport { ERROR, Toast } from '@/modules/toast/handler/handlerToast';\nimport handlerSend from '@/modules/send/handlers/handlerSend.js';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common.js';\nimport abi from '@/modules/balance/handlers/abiERC20.js';\nimport nodes from '@/utils/networks';\nimport { toBNSafe, formatFiatValue } from '@/core/helpers/numberFormatHelper';\nimport { toBase } from '@/core/helpers/unit';\nimport { sellContracts } from './tokenList';\nimport handlerWallet from '@/core/mixins/handlerWallet.mixin';\nimport ModuleAddressBook from '@/modules/address-book/ModuleAddressBook.vue';\n\nexport default {\n  name: 'ModuleSellEth',\n  components: {\n    ButtonBalance: () => import('@/core/components/AppButtonBalance'),\n    ModuleAddressBook\n  },\n  mixins: [handlerWallet],\n  props: {\n    orderHandler: {\n      type: Object,\n      default: () => {}\n    },\n    close: {\n      type: Function,\n      default: () => {}\n    },\n    inWallet: {\n      type: Boolean,\n      default: false\n    },\n    defaultCurrency: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    return {\n      selectedCurrency: this.defaultCurrency,\n      amount: '0',\n      fetchedData: {},\n      locGasPrice: '0',\n      sendHandler: {},\n      loading: true,\n      hasPersistentHint: false,\n      fetchingBalance: true,\n      gasLimit: 21000,\n      estimatingFees: true,\n      maxBalance: '0',\n      selectedBalance: '0',\n      toAddress: '',\n      validToAddress: false\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'instance']),\n    ...mapState('global', ['gasPriceType']),\n    ...mapGetters('wallet', ['balanceInETH', 'tokensList']),\n    ...mapGetters('global', ['isEthNetwork', 'network', 'gasPriceByType']),\n    ...mapGetters('external', ['contractToToken']),\n    persistentHintMessage() {\n      return this.hasPersistentHint\n        ? `Max adjusted to leave sufficient ${this.selectedCurrency.symbol} for network fee`\n        : '';\n    },\n    maxButton() {\n      return BigNumber(this.selectedBalance).gt(0)\n        ? {\n            title: 'Max',\n            method: this.setMax,\n            disabled:\n              this.nonMainnetMetamask ||\n              BigNumber(this.txFee).gte(this.selectedBalance)\n          }\n        : {};\n    },\n    preselectedCurrencies() {\n      if (this.inWallet) {\n        return sellContracts.reduce((arr, item) => {\n          const inList = this.tokensList.find(t => {\n            if (t.contract.toLowerCase() === item.toLowerCase()) return t;\n          });\n          if (inList) {\n            inList.price = formatFiatValue(inList ? inList.price : '0').value;\n            arr.push(inList);\n            return arr;\n          }\n\n          const token = this.contractToToken(item);\n          if (token) {\n            token.price = formatFiatValue(token ? token.price : '0').value;\n            arr.push(token);\n          }\n          return arr;\n        }, []);\n      }\n      const arr = new Array();\n      for (const contract of sellContracts) {\n        const token = this.contractToToken(contract);\n        if (token) {\n          token.price = formatFiatValue(token ? token.price : '0').value;\n          arr.push(token);\n        }\n      }\n      return arr;\n    },\n    currencyItems() {\n      const tokensList = this.preselectedCurrencies;\n      const imgs = tokensList.map(item => {\n        item.value = item.name;\n        item.name = item.symbol;\n        return item.img;\n      });\n\n      const returnedArray = [\n        {\n          text: 'Select Token',\n          imgs: imgs.splice(0, 3),\n          total: `${tokensList.length}`,\n          divider: true,\n          selectLabel: true\n        },\n        ...tokensList\n      ];\n      return returnedArray;\n    },\n    name() {\n      return this.selectedCurrency.symbol !== 'ETH' &&\n        this.selectedCurrency.symbol !== 'USDC' &&\n        this.selectedCurrency.symbol !== 'USDT'\n        ? 'ETH'\n        : this.selectedCurrency.symbol;\n    },\n    disableSell() {\n      return (\n        !this.amount ||\n        this.amount === '' ||\n        BigNumber(this.amount).eq(0) ||\n        this.loading ||\n        this.errorMessages !== '' ||\n        !this.actualValidAddress\n      );\n    },\n    min() {\n      if (!isEmpty(this.fetchedData)) {\n        const found = this.fetchedData.limits.find(item => {\n          return item.crypto_currency === this.name && item.type === 'WEB';\n        });\n\n        if (found) {\n          return BigNumber(found.limit.min);\n        }\n      }\n      return BigNumber(0.015);\n    },\n    max() {\n      if (!isEmpty(this.fetchedData)) {\n        const found = this.fetchedData.limits.find(item => {\n          return item.crypto_currency === this.name && item.type === 'WEB';\n        });\n\n        if (found) {\n          return BigNumber(found.limit.max);\n        }\n      }\n      return BigNumber(3);\n    },\n    txFee() {\n      return fromWei(\n        BigNumber(this.locGasPrice).times(this.gasLimit).toString()\n      );\n    },\n    txFeeInEth() {\n      return `${BigNumber(this.txFee).decimalPlaces(4)} ETH`;\n    },\n    errorMessages() {\n      const symbol = this.selectedCurrency?.symbol\n        ? this.name\n        : this.network.type.currencyName;\n      const amount = BigNumber(this.amount);\n      if (this.nonMainnetMetamask) {\n        return 'Please switch your network to the Ethereum Mainnet on Metamask.';\n      }\n\n      if (amount.isNaN() || amount.eq(0)) {\n        return 'Amount required';\n      }\n\n      if (amount.lt(0)) {\n        return \"Amount can't be negative.\";\n      }\n\n      if (amount.gt(0) && amount.lt(this.min)) {\n        return `The minimum amount to sell is ${this.min.toString()} ${symbol}.`;\n      }\n      if (amount.gt(0) && amount.gt(this.max)) {\n        return `The maximum amount to sell is ${this.max.toString()} ${symbol}.`;\n      }\n\n      if (this.inWallet) {\n        if (amount.gt(this.selectedBalance)) {\n          return `You do not have enough ${symbol} to sell.`;\n        }\n        if (\n          !isEmpty(this.sendHandler) &&\n          !this.sendHandler.hasEnoughBalance()\n        ) {\n          return `You do not have enough ETH to pay for network fee.`;\n        }\n      } else {\n        // Not in wallet\n        if (\n          this.actualValidAddress &&\n          this.isValidAmount &&\n          !this.hasEnoughAssets\n        ) {\n          return 'Address provided does not have enough balance to complete the transaction';\n        }\n      }\n      if (\n        this.amount &&\n        !handlerSend.helpers.hasValidDecimals(\n          this.amount,\n          this.selectedCurrency.decimals\n        )\n      ) {\n        return `Invalid decimals! Max decimals for selected currency is ${this.selectedCurrency.decimals}`;\n      }\n\n      return '';\n    },\n    nonMainnetMetamask() {\n      return (\n        this.instance &&\n        this.instance.identifier === WALLET_TYPES.WEB3_WALLET &&\n        this.network?.type.name !== 'ETH'\n      );\n    },\n    isValidAmount() {\n      /** !amount */\n      if (!this.amount) {\n        return false;\n      }\n      if (!isNumber(this.selectedCurrency?.decimals)) {\n        return false;\n      }\n      /** amount is negative */\n      if (BigNumber(this.amount).lt(0)) {\n        return false;\n      }\n      /** return amount has valid decimals */\n      return handlerSend.helpers.hasValidDecimals(\n        this.amount,\n        this.selectedCurrency.decimals\n      );\n    },\n    getCalculatedAmount() {\n      const amount = new BigNumber(this.amount ? this.amount : 0)\n        .times(new BigNumber(10).pow(this.selectedCurrency.decimals))\n        .toFixed(0);\n      return toBNSafe(amount);\n    },\n    getAmountBN() {\n      // Duplicate of getCalculatedAmount\n      if (!this.isValidAmount) return toBNSafe(0);\n      const amount = toBase(\n        this.amount ? this.amount : 0,\n        this.selectedCurrency.decimals\n      );\n      return toBNSafe(amount);\n    },\n    hasEnoughAssets() {\n      try {\n        const bal = toBase(\n          this.selectedBalance,\n          this.selectedCurrency.decimals\n        );\n        return toBNSafe(bal).gte(this.getAmountBN);\n      } catch (e) {\n        Toast(e, {}, ERROR);\n        return false;\n      }\n    },\n    actualAddress() {\n      return this.inWallet ? this.address : this.toAddress;\n    },\n    actualValidAddress() {\n      return this.inWallet ? true : this.validToAddress;\n    }\n  },\n  watch: {\n    selectedCurrency: {\n      handler: function (newVal) {\n        this.maxBalance = '0';\n        this.hasPersistentHint = false;\n        this.selectedBalance = '0';\n        if (\n          !isEmpty(this.sendHandler) &&\n          this.selectedCurrency.hasOwnProperty('name')\n        ) {\n          this.sendHandler.setCurrency(newVal);\n        }\n        this.fetchSellInfo();\n      },\n      deep: true\n    },\n    amount(newVal) {\n      this.debouncedSetAmount(newVal);\n    },\n    gasPriceType(newVal) {\n      this.locGasPrice = this.gasPriceByType(newVal);\n    },\n    locGasPrice(val) {\n      this.sendHandler.setLocalGasPrice(val);\n    },\n    gasLimit(val) {\n      this.sendHandler.setGasLimit(val);\n    },\n    orderHandler: {\n      handler: function () {\n        this.sendHandler = new handlerSend();\n        this.fetchSellInfo();\n        this.locGasPrice = this.gasPriceByType(this.gasPriceType);\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    // Watch for currency menu isActive\n    const selectedCurrencyRef = this.$refs.selectedCurrency;\n    const menuRef = selectedCurrencyRef.$children[0].$refs.menu;\n    this.$watch(\n      () => {\n        return menuRef.isActive;\n      },\n      val => {\n        // If menu is closed make sure search is cleared\n        if (!val) {\n          if (\n            selectedCurrencyRef.search !== '' ||\n            selectedCurrencyRef.selectItems.length === 0\n          )\n            selectedCurrencyRef.search = '';\n        }\n      }\n    );\n\n    if (!this.inWallet) this.$refs.addressInput.$refs.addressSelect.clear();\n    this.sendHandler = new handlerSend();\n    this.fetchSellInfo();\n    this.locGasPrice = this.gasPriceByType(this.gasPriceType);\n  },\n  methods: {\n    ...mapActions('external', ['setCoinGeckoTokens']),\n    setAddress(newVal, isValid, data) {\n      if (data.type === 'RESOLVED' && !data.value.includes('.'))\n        this.toAddress = data.value;\n      else this.toAddress = newVal;\n      this.validToAddress = isValid;\n      if (!this.validToAddress) return;\n      this.sendHandler.setFrom(this.toAddress);\n      this.fetchSellInfo();\n    },\n    getEthBalance() {\n      if (!this.actualValidAddress) return;\n      const web3Instance = new Web3(nodes.ETH[0].url);\n      web3Instance.eth.getBalance(this.actualAddress).then(res => {\n        this.fetchingBalance = false;\n        this.selectedBalance = fromWei(res);\n      });\n    },\n    getTokenBalance() {\n      if (!this.actualValidAddress) return;\n      const web3Instance = new Web3(nodes.ETH[0].url);\n      const contract = new web3Instance.eth.Contract(\n        abi,\n        this.selectedCurrency.contract\n      );\n      contract.methods\n        .balanceOf(this.actualAddress)\n        .call()\n        .then(res => {\n          this.fetchingBalance = false;\n          this.selectedBalance = BigNumber(res)\n            .div(BigNumber(10).pow(this.selectedCurrency.decimals))\n            .toString();\n        });\n    },\n    debouncedSetAmount: debounce(function (newVal) {\n      if (!BigNumber(newVal).eq(this.maxBalance)) {\n        this.hasPersistentHint = false;\n      }\n\n      if (BigNumber(newVal).lt(0)) {\n        return;\n      }\n      if (\n        newVal &&\n        !isEmpty(this.sendHandler) &&\n        this.isValidAmount &&\n        this.inWallet\n      ) {\n        const newValue = BigNumber(newVal ? newVal : 0)\n          .times(\n            BigNumber(10).pow(\n              this.selectedCurrency?.decimals\n                ? this.selectedCurrency.decimals\n                : 18\n            )\n          )\n          .toString();\n        this.sendHandler.setValue(newValue);\n        if (this.errorMessages === '' && this.hasEnoughAssets) {\n          this.estimatingFees = true;\n          this.sendHandler\n            .estimateGas()\n            .then(res => {\n              this.estimatingFees = false;\n              this.gasLimit = res;\n            })\n            .catch(err => {\n              Toast(err, {}, ERROR);\n            });\n        }\n      }\n    }, 500),\n    setCurrency(e) {\n      this.amount = '0';\n      this.selectedCurrency = e;\n    },\n    setMax() {\n      const bal = this.sendHandler.getEntireBal();\n      if (bal) {\n        this.amount = BigNumber(bal)\n          .div(\n            BigNumber(10).pow(\n              this.selectedCurrency.hasOwnProperty('name')\n                ? this.selectedCurrency.decimals\n                : 18\n            )\n          )\n          .toString();\n      } else {\n        this.amount = this.selectedBalance;\n      }\n      this.maxBalance = this.amount;\n      this.hasPersistentHint = true;\n    },\n    sell() {\n      this.orderHandler\n        .sell(this.name, this.amount, this.actualAddress)\n        .then(() => {\n          this.amount = '0';\n          this.close();\n          this.selectedCurrency = this.defaultCurrency;\n        })\n        .catch(err => {\n          Toast(err, {}, ERROR);\n          this.amount = '0';\n          this.close();\n          this.selectedCurrency = this.defaultCurrency;\n        });\n    },\n    fetchSellInfo() {\n      if (this.actualValidAddress && this.selectedCurrency.contract) {\n        this.fetchingBalance = true;\n        if (this.selectedCurrency.contract === MAIN_TOKEN_ADDRESS) {\n          this.getEthBalance();\n        } else {\n          this.getTokenBalance();\n        }\n        if (this.hasEnoughAssets) {\n          this.sendHandler.setFrom(this.actualAddress);\n          this.sendHandler.setCurrency(this.selectedCurrency);\n          this.sendHandler.setValue(this.getCalculatedAmount);\n          // eslint-disable-next-line\n          this.sendHandler.setTo(ETH_DONATION_ADDRESS, 'TYPED');\n          this.estimatingFees = true;\n          this.sendHandler\n            .estimateGas()\n            .then(res => {\n              this.estimatingFees = false;\n              this.gasLimit = res;\n            })\n            .catch(err => {\n              Toast(err, {}, ERROR);\n            });\n        }\n      } else {\n        this.fetchingBalance = false;\n        this.selectedBalance = fromWei('0');\n      }\n      this.orderHandler\n        .getSupportedFiatToSell(this.name)\n        .then(res => {\n          this.loading = false;\n          this.fetchedData = res[0];\n        })\n        .catch(e => {\n          this.loading = false;\n          Toast(e, {}, ERROR);\n        });\n    },\n    isValidToAddress(address) {\n      return MultiCoinValidator.validate(address, this.selectedCurrency.symbol);\n    },\n    preventCharE(e) {\n      if (e.key === 'e') e.preventDefault();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MoonPaySellComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MoonPaySellComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MoonPaySellComponent.vue?vue&type=template&id=10c0e139&scoped=true&\"\nimport script from \"./MoonPaySellComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./MoonPaySellComponent.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"10c0e139\",\n  null\n  \n)\n\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getEthBalance\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getEthBalance\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"hash\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"balance\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getLatestPrices\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getLatestPrices\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"symbol\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"image\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"contract\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"current_price\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"market_cap\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"total_volume\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"price_change_percentage_24h\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"total_supply\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getBalanceHistory\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"timeString\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"todaysDate\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"scale\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"TimeseriesScale\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"_nextKey\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getTimeseriesData\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"fromT\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"timeString\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"toT\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"todaysDate\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"scale\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"scale\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"nextKey\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"_nextKey\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"items\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"timestamp\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"nextKey\"},\"arguments\":[],\"directives\":[]}]}}]}},{\"kind\":\"OperationDefinition\",\"operation\":\"subscription\",\"name\":{\"kind\":\"Name\",\"value\":\"subscribeToAccountBalance\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"event\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"AddressEventType\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"addressEvent\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"event\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"event\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"blockNumber\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":791}};\n    doc.loc.source = {\"body\":\"query getEthBalance($hash: String!) {\\n  getEthBalance(owner: $hash) {\\n    balance\\n  }\\n}\\n\\nquery getLatestPrices {\\n  getLatestPrices {\\n      id\\n      symbol\\n      name\\n      image\\n      contract\\n      current_price\\n      market_cap\\n      total_volume\\n      price_change_percentage_24h\\n      total_supply\\n  }\\n}\\n\\nquery getBalanceHistory(\\n  $timeString: Int!\\n  $todaysDate: Int!\\n  $key: String!\\n  $scale: TimeseriesScale!\\n  $_nextKey: String\\n) {\\n  getTimeseriesData(\\n    fromT: $timeString\\n    toT: $todaysDate\\n    key: $key\\n    scale: $scale\\n    nextKey: $_nextKey\\n  ) {\\n    items {\\n      value\\n      timestamp\\n    }\\n    nextKey\\n  }\\n}\\n\\nsubscription subscribeToAccountBalance(\\n  $owner: String!\\n  $event: AddressEventType!\\n) {\\n  addressEvent(owner: $owner, event: $event) {\\n    blockNumber\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"getEthBalance\"] = oneQuery(doc, \"getEthBalance\");\n        \n        module.exports[\"getLatestPrices\"] = oneQuery(doc, \"getLatestPrices\");\n        \n        module.exports[\"getBalanceHistory\"] = oneQuery(doc, \"getBalanceHistory\");\n        \n        module.exports[\"subscribeToAccountBalance\"] = oneQuery(doc, \"subscribeToAccountBalance\");\n        \n","/**\n * The Wallet View Apollo Mixin\n */\nimport { mapActions } from 'vuex';\nimport { getLatestPrices } from '@/apollo/queries/wallets/wallets.graphql';\nimport { Toast, ERROR } from '@/modules/toast/handler/handlerToast';\nexport default {\n  name: 'HandlerWallet',\n  data() {\n    return {\n      getLatestPrices: '',\n      tokensData: {}\n    };\n  },\n  apollo: {\n    /**\n     * Apollo query to fetch latest tokens\n     * also set the state for eth price\n     */\n    getLatestPrices: {\n      query: getLatestPrices,\n      pollInterval: 600000,\n      result({ data }) {\n        this.tokensData = new Map();\n        if (data && data.getLatestPrices) {\n          data.getLatestPrices.forEach(token => {\n            this.tokensData.set(token.id, token);\n          });\n          this.setCoinGeckoTokens(this.tokensData);\n        }\n      },\n      error(error) {\n        Toast(error.message, {}, ERROR);\n      }\n    }\n  },\n  methods: {\n    ...mapActions('external', ['setCoinGeckoTokens'])\n  }\n};\n","export default {\n  INVALID_TO_ADDRESS: 'Invalid to address',\n  INVALID_FROM_ADDRESS: 'Invalid from address',\n  INVALID_DATA_HEX: 'Invalid hex string for data',\n  NEGATIVE_VALUE: 'negative value'\n};\n","import { toBN, toHex, toChecksumAddress, isHexStrict } from 'web3-utils';\nimport { isAddress } from '@/core/helpers/addressUtils';\nimport SanitizeHex from '@/core/helpers/sanitizeHex';\nimport { Transaction } from '@ethereumjs/tx';\nimport { mapState, mapGetters } from 'vuex';\nimport vuexStore from '@/core/store';\nimport ErrorList from '../errors';\nimport Web3Contract from 'web3-eth-contract';\nimport { MAIN_TOKEN_ADDRESS } from '@/core/helpers/common';\nimport hasValidDecimals from '@/core/helpers/hasValidDecimals.js';\nimport { isNull } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { toBNSafe } from '@/core/helpers/numberFormatHelper';\n\nclass SendTransaction {\n  constructor() {\n    this.$store = vuexStore;\n    Object.assign(this, mapState('wallet', ['balance', 'web3', 'address']));\n    Object.assign(this, mapGetters('global', ['network']));\n    this.currency = null;\n    this.localGasPrice = '0';\n    this.TX = {\n      from: '0x',\n      to: '0x',\n      destination: '0x',\n      nonce: '0x',\n      gasPrice: '0x',\n      gas: '0x5208', //21000\n      value: '0x',\n      destinationValue: '0x',\n      data: '0x'\n    };\n  }\n  setTo(_to, _type) {\n    if (isAddress(_to)) {\n      this.TX.destination = _to;\n      this.TX.toDetails = _type;\n    } else throw ErrorList.INVALID_TO_ADDRESS;\n  }\n  _setTo() {\n    this.TX.to = this.isToken()\n      ? toChecksumAddress(this.currency.contract)\n      : toChecksumAddress(this.TX.destination);\n  }\n  setFrom(_from) {\n    if (isAddress(_from)) this.TX.from = _from;\n    else throw ErrorList.INVALID_FROM_ADDRESS;\n  }\n  _setGasPrice() {\n    this.TX.gasPrice = toHex(toBN(this.localGasPrice));\n  }\n  setGasLimit(_gasLimit) {\n    this.TX.gas = toHex(toBN(_gasLimit));\n  }\n  setLocalGasPrice(gasPrice) {\n    this.localGasPrice = toHex(toBN(gasPrice));\n  }\n  setValue(_value) {\n    if (isNaN(_value) || isNull(_value)) _value = 0;\n    const _valueBN = new BigNumber(_value);\n    if (!_valueBN.lt(0)) this.TX.destinationValue = toHex(_valueBN.toFixed());\n    else throw ErrorList.NEGATIVE_VALUE;\n  }\n  _setValue() {\n    if (this.isToken()) {\n      this.TX.value = '0x00';\n      this.setData(\n        this.getTokenTransferABI(this.TX.destinationValue, this.TX.destination)\n      );\n    } else {\n      this.TX.value = toHex(toBN(this.TX.destinationValue));\n    }\n  }\n  setData(_data) {\n    if (isHexStrict(_data)) this.TX.data = SanitizeHex(_data);\n    else throw ErrorList.INVALID_DATA_HEX;\n  }\n  setNonce(_nonce) {\n    this.TX.nonce = toHex(toBN(_nonce));\n  }\n  setCurrency(_currency) {\n    this.currency = _currency;\n    this.TX.data = '0x';\n  }\n  getEntireBal() {\n    if (this.isToken()) {\n      return this.currency.balance;\n    }\n    const gasPriceBN = toBN(this.localGasPrice);\n    const fee = gasPriceBN.mul(toBN(this.TX.gas));\n    return this.balance().gt(this.balance().sub(fee))\n      ? this.balance().sub(fee)\n      : 0;\n  }\n  txFee() {\n    return toBN(this.localGasPrice).mul(toBN(this.TX.gas));\n  }\n  estimateGas() {\n    if (this.address()) this.setFrom(this.address());\n    this._setTo();\n    this._setValue();\n    this._setGasPrice();\n    return this.web3().eth.estimateGas({\n      data: this.TX.data,\n      from: this.TX.from,\n      to: this.TX.to,\n      value: this.TX.value\n    });\n  }\n  isToken() {\n    return this.currency?.contract !== MAIN_TOKEN_ADDRESS;\n  }\n  hasEnoughBalance() {\n    const amount = toBN(this.TX.destinationValue);\n    if (this.isToken() && this.currency.balance) {\n      const hasAmountToken = amount.lte(toBNSafe(this.currency.balance));\n      const hasGas = this.txFee().lte(this.balance());\n      return hasAmountToken && hasGas;\n    }\n    return amount.add(this.txFee()).lte(this.balance());\n  }\n  getTokenTransferABI(amount, _toAddress) {\n    amount = toBN(amount);\n    const jsonInterface = [\n      {\n        constant: false,\n        inputs: [\n          { name: '_to', type: 'address' },\n          { name: '_amount', type: 'uint256' }\n        ],\n        name: 'transfer',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function'\n      }\n    ];\n    const contract = new Web3Contract(jsonInterface);\n    return contract.methods\n      .transfer(_toAddress.toLowerCase(), amount)\n      .encodeABI();\n  }\n  async submitTransaction() {\n    try {\n      this._setTo();\n      this._setValue();\n      this._setGasPrice();\n      const nonce = await this.web3().eth.getTransactionCount(this.address());\n      this.setNonce(nonce);\n      this.TX.gasLimit = this.TX.gas;\n      const _tx = Transaction.fromTxData(this.TX);\n      const json = _tx.toJSON(true);\n      json.from = this.address();\n      json.toDetails = this.TX.toDetails;\n      return this.web3().eth.sendTransaction(json);\n    } catch (e) {\n      return e;\n    }\n  }\n}\nSendTransaction.helpers = {\n  hasValidDecimals\n};\nexport default SendTransaction;\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\n$({ target: 'URL', proto: true, enumerable: true }, {\n  toJSON: function toJSON() {\n    return call(URL.prototype.toString, this);\n  }\n});\n"],"sourceRoot":""}